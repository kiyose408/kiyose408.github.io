{"title":"STL常用容器1","uid":"d3af54b11f2dd7ea1cd5b0bad6f3d323","slug":"STL常用容器_1","date":"2021-06-27T10:49:00.000Z","updated":"2024-05-21T12:43:42.095Z","comments":true,"path":"api/articles/STL常用容器_1.json","keywords":null,"cover":"img/STL.jpg","content":"<h1>1 string容器</h1>\n<h2 id=\"1-1-string基本概念\">1.1 string基本概念</h2>\n<p><strong>本质：</strong></p>\n<ul>\n<li>string是C++风格的字符串，而string本质上是一个类</li>\n</ul>\n<p><strong>string和char * 区别：</strong></p>\n<ul>\n<li>char * 是一个指针</li>\n<li>string是一个类，类内部封装了char*，管理这个字符串，是一个char*型的容器。</li>\n</ul>\n<p><strong>特点：</strong></p>\n<p>string 类内部封装了很多成员方法</p>\n<p>例如：查找find，拷贝copy，删除delete 替换replace，插入insert</p>\n<p>string管理char*所分配的内存，不用担心复制越界和取值越界等，由类内部进行负责</p>\n<h2 id=\"1-2-string构造函数\">1.2 string构造函数</h2>\n<p>构造函数原型：</p>\n<ul>\n<li><code>string();</code>          \t\t\t\t//创建一个空的字符串 例如: string str;<br>\n<code>string(const char* s);</code>\t        //使用字符串s初始化</li>\n<li><code>string(const string&amp; str);</code>    //使用一个string对象初始化另一个string对象</li>\n<li><code>string(int n, char c);</code>           //使用n个字符c初始化</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"comment\">//string构造</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring s1; <span class=\"comment\">//创建空字符串，调用无参构造函数</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; s1 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">const</span> <span class=\"type\">char</span>* str = <span class=\"string\">&quot;hello world&quot;</span>;</span><br><span class=\"line\">\t<span class=\"function\">string <span class=\"title\">s2</span><span class=\"params\">(str)</span></span>; <span class=\"comment\">//把c_string转换成了string</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str2 = &quot;</span> &lt;&lt; s2 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">string <span class=\"title\">s3</span><span class=\"params\">(s2)</span></span>; <span class=\"comment\">//调用拷贝构造函数</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str3 = &quot;</span> &lt;&lt; s3 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">string <span class=\"title\">s4</span><span class=\"params\">(<span class=\"number\">10</span>, <span class=\"string\">&#x27;a&#x27;</span>)</span></span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str3 = &quot;</span> &lt;&lt; s3 &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：string的多种构造方式没有可比性，灵活使用即可</p>\n<h2 id=\"1-3-string赋值操作\">1.3 string赋值操作</h2>\n<p>功能描述：</p>\n<ul>\n<li>给string字符串进行赋值</li>\n</ul>\n<p>赋值的函数原型：</p>\n<ul>\n<li><code>string&amp; operator=(const char* s);</code>             //char*类型字符串 赋值给当前的字符串</li>\n<li><code>string&amp; operator=(const string &amp;s);</code>         //把字符串s赋给当前的字符串</li>\n<li><code>string&amp; operator=(char c);</code>                          //字符赋值给当前的字符串</li>\n<li><code>string&amp; assign(const char *s);</code>                  //把字符串s赋给当前的字符串</li>\n<li><code>string&amp; assign(const char *s, int n);</code>     //把字符串s的前n个字符赋给当前的字符串</li>\n<li><code>string&amp; assign(const string &amp;s);</code>              //把字符串s赋给当前字符串</li>\n<li><code>string&amp; assign(int n, char c);</code>                  //用n个字符c赋给当前字符串</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//赋值</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring str1;</span><br><span class=\"line\">\tstr1 = <span class=\"string\">&quot;hello world&quot;</span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str2;</span><br><span class=\"line\">\tstr2 = str1;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str2 = &quot;</span> &lt;&lt; str2 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str3;</span><br><span class=\"line\">\tstr3 = <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str3 = &quot;</span> &lt;&lt; str3 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str4;</span><br><span class=\"line\">\tstr4.<span class=\"built_in\">assign</span>(<span class=\"string\">&quot;hello c++&quot;</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str4 = &quot;</span> &lt;&lt; str4 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str5;</span><br><span class=\"line\">\tstr5.<span class=\"built_in\">assign</span>(<span class=\"string\">&quot;hello c++&quot;</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str5 = &quot;</span> &lt;&lt; str5 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str6;</span><br><span class=\"line\">\tstr6.<span class=\"built_in\">assign</span>(str5);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str6 = &quot;</span> &lt;&lt; str6 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str7;</span><br><span class=\"line\">\tstr7.<span class=\"built_in\">assign</span>(<span class=\"number\">5</span>, <span class=\"string\">&#x27;x&#x27;</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str7 = &quot;</span> &lt;&lt; str7 &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<p>​\tstring的赋值方式很多，<code>operator=</code>  这种方式是比较实用的</p>\n<h2 id=\"1-4-string字符串拼接\">1.4 string字符串拼接</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>实现在字符串末尾拼接字符串</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>string&amp; operator+=(const char* str);</code>                   //重载+=操作符</li>\n<li><code>string&amp; operator+=(const char c);</code>                         //重载+=操作符</li>\n<li><code>string&amp; operator+=(const string&amp; str);</code>                //重载+=操作符</li>\n<li><code>string&amp; append(const char *s); </code>                               //把字符串s连接到当前字符串结尾</li>\n<li><code>string&amp; append(const char *s, int n);</code>                 //把字符串s的前n个字符连接到当前字符串结尾</li>\n<li><code>string&amp; append(const string &amp;s);</code>                           //同operator+=(const string&amp; str)</li>\n<li><code>string&amp; append(const string &amp;s, int pos, int n);</code>//字符串s中从pos开始的n个字符连接到字符串结尾</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//字符串拼接</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring str1 = <span class=\"string\">&quot;我&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstr1 += <span class=\"string\">&quot;爱玩游戏&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tstr1 += <span class=\"string\">&#x27;:&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str2 = <span class=\"string\">&quot;LOL DNF&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstr1 += str2;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str3 = <span class=\"string\">&quot;I&quot;</span>;</span><br><span class=\"line\">\tstr3.<span class=\"built_in\">append</span>(<span class=\"string\">&quot; love &quot;</span>);</span><br><span class=\"line\">\tstr3.<span class=\"built_in\">append</span>(<span class=\"string\">&quot;game abcde&quot;</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//str3.append(str2);</span></span><br><span class=\"line\">\tstr3.<span class=\"built_in\">append</span>(str2, <span class=\"number\">4</span>, <span class=\"number\">3</span>); <span class=\"comment\">// 从下标4位置开始 ，截取3个字符，拼接到字符串末尾</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str3 = &quot;</span> &lt;&lt; str3 &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：字符串拼接的重载版本很多，初学阶段记住几种即可</p>\n<h2 id=\"1-5-string查找和替换\">1.5 string查找和替换</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>查找：查找指定字符串是否存在</li>\n<li>替换：在指定的位置替换字符串</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>int find(const string&amp; str, int pos = 0) const;</code>              //查找str第一次出现位置,从pos开始查找</li>\n<li><code>int find(const char* s, int pos = 0) const; </code>                     //查找s第一次出现位置,从pos开始查找</li>\n<li><code>int find(const char* s, int pos, int n) const; </code>               //从pos位置查找s的前n个字符第一次位置</li>\n<li><code>int find(const char c, int pos = 0) const; </code>                       //查找字符c第一次出现位置</li>\n<li><code>int rfind(const string&amp; str, int pos = npos) const;</code>      //查找str最后一次位置,从pos开始查找</li>\n<li><code>int rfind(const char* s, int pos = npos) const;</code>              //查找s最后一次出现位置,从pos开始查找</li>\n<li><code>int rfind(const char* s, int pos, int n) const;</code>              //从pos查找s的前n个字符最后一次位置</li>\n<li><code>int rfind(const char c, int pos = 0) const;  </code>                      //查找字符c最后一次出现位置</li>\n<li><code>string&amp; replace(int pos, int n, const string&amp; str); </code>       //替换从pos开始n个字符为字符串str</li>\n<li><code>string&amp; replace(int pos, int n,const char* s); </code>                 //替换从pos开始的n个字符为字符串s</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//查找和替换</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//查找</span></span><br><span class=\"line\">\tstring str1 = <span class=\"string\">&quot;abcdefgde&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> pos = str1.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;de&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (pos == <span class=\"number\">-1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;未找到&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;pos = &quot;</span> &lt;&lt; pos &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\"></span><br><span class=\"line\">\tpos = str1.<span class=\"built_in\">rfind</span>(<span class=\"string\">&quot;de&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;pos = &quot;</span> &lt;&lt; pos &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//替换</span></span><br><span class=\"line\">\tstring str1 = <span class=\"string\">&quot;abcdefgde&quot;</span>;</span><br><span class=\"line\">\tstr1.<span class=\"built_in\">replace</span>(<span class=\"number\">1</span>, <span class=\"number\">3</span>, <span class=\"string\">&quot;1111&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;str1 = &quot;</span> &lt;&lt; str1 &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//test01();</span></span><br><span class=\"line\">\t<span class=\"comment\">//test02();</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>find查找是从左往后，rfind从右往左</li>\n<li>find找到字符串后返回查找的第一个字符位置，找不到返回-1</li>\n<li>replace在替换时，要指定从哪个位置起，多少个字符，替换成什么样的字符串</li>\n</ul>\n<h2 id=\"1-6-string字符串比较\">1.6 string字符串比较</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>字符串之间的比较</li>\n</ul>\n<p><strong>比较方式：</strong></p>\n<ul>\n<li>字符串比较是按字符的ASCII码进行对比</li>\n</ul>\n<p>= 返回   0</p>\n<p>&gt; 返回   1</p>\n<p>&lt; 返回  -1</p>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>int compare(const string &amp;s) const; </code>  //与字符串s比较</li>\n<li><code>int compare(const char *s) const;</code>      //与字符串s比较</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//字符串比较</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring s1 = <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">\tstring s2 = <span class=\"string\">&quot;aello&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> ret = s1.<span class=\"built_in\">compare</span>(s2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ret == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;s1 等于 s2&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (ret &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;s1 大于 s2&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;s1 小于 s2&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：字符串对比主要是用于比较两个字符串是否相等，判断谁大谁小的意义并不是很大</p>\n<h2 id=\"1-7-string字符存取\">1.7 string字符存取</h2>\n<p>string中单个字符存取方式有两种</p>\n<ul>\n<li><code>char&amp; operator[](int n); </code>     //通过[]方式取字符</li>\n<li><code>char&amp; at(int n);   </code>                    //通过at方法获取字符</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring str = <span class=\"string\">&quot;hello world&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; str.<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; str[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; str.<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; str.<span class=\"built_in\">at</span>(i) &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//字符修改</span></span><br><span class=\"line\">\tstr[<span class=\"number\">0</span>] = <span class=\"string\">&#x27;x&#x27;</span>;</span><br><span class=\"line\">\tstr.<span class=\"built_in\">at</span>(<span class=\"number\">1</span>) = <span class=\"string\">&#x27;x&#x27;</span>;</span><br><span class=\"line\">\tcout &lt;&lt; str &lt;&lt; endl;</span><br><span class=\"line\">\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：string字符串中单个字符存取有两种方式，利用 [ ] 或 at</p>\n<h2 id=\"1-8-string插入和删除\">1.8 string插入和删除</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对string字符串进行插入和删除字符操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>string&amp; insert(int pos, const char* s);  </code>                //插入字符串</li>\n<li><code>string&amp; insert(int pos, const string&amp; str); </code>        //插入字符串</li>\n<li><code>string&amp; insert(int pos, int n, char c);</code>                //在指定位置插入n个字符c</li>\n<li><code>string&amp; erase(int pos, int n = npos);</code>                    //删除从Pos开始的n个字符</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//字符串插入和删除</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring str = <span class=\"string\">&quot;hello&quot;</span>;</span><br><span class=\"line\">\tstr.<span class=\"built_in\">insert</span>(<span class=\"number\">1</span>, <span class=\"string\">&quot;111&quot;</span>);</span><br><span class=\"line\">\tcout &lt;&lt; str &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstr.<span class=\"built_in\">erase</span>(<span class=\"number\">1</span>, <span class=\"number\">3</span>);  <span class=\"comment\">//从1号位置开始3个字符</span></span><br><span class=\"line\">\tcout &lt;&lt; str &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>**总结：**插入和删除的起始下标都是从0开始</p>\n<h2 id=\"1-9-string子串\">1.9 string子串</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>从字符串中获取想要的子串</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>string substr(int pos = 0, int n = npos) const;</code>   //返回由pos开始的n个字符组成的字符串</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//子串</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring str = <span class=\"string\">&quot;abcdefg&quot;</span>;</span><br><span class=\"line\">\tstring subStr = str.<span class=\"built_in\">substr</span>(<span class=\"number\">1</span>, <span class=\"number\">3</span>);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;subStr = &quot;</span> &lt;&lt; subStr &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring email = <span class=\"string\">&quot;hello@sina.com&quot;</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> pos = email.<span class=\"built_in\">find</span>(<span class=\"string\">&quot;@&quot;</span>);</span><br><span class=\"line\">\tstring username = email.<span class=\"built_in\">substr</span>(<span class=\"number\">0</span>, pos);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;username: &quot;</span> &lt;&lt; username &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>**总结：**灵活的运用求子串功能，可以在实际开发中获取有效的信息</p>\n<h1>2 vector容器</h1>\n<h2 id=\"2-1-vector基本概念\">2.1 vector基本概念</h2>\n<p><strong>功能：</strong></p>\n<ul>\n<li>vector数据结构和<strong>数组非常相似</strong>，也称为<strong>单端数组</strong></li>\n</ul>\n<p><strong>vector与普通数组区别：</strong></p>\n<ul>\n<li>不同之处在于数组是静态空间，而vector可以<strong>动态扩展</strong></li>\n</ul>\n<p><strong>动态扩展：</strong></p>\n<ul>\n<li>\n<p>并不是在原空间之后续接新空间，而是找更大的内存空间，然后将原数据拷贝新空间，释放原空间</p>\n</li>\n<li>\n<p>vector容器的迭代器是支持随机访问的迭代器</p>\n</li>\n</ul>\n<h2 id=\"2-2-vector构造函数\">2.2 vector构造函数</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>创建vector容器</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>vector&lt;T&gt; v; </code>               \t\t     //采用模板实现类实现，默认构造函数</li>\n<li><code>vector(v.begin(), v.end());   </code>       //将v[begin(), end())区间中的元素拷贝给本身。</li>\n<li><code>vector(n, elem);</code>                            //构造函数将n个elem拷贝给本身。</li>\n<li><code>vector(const vector &amp;vec);</code>         //拷贝构造函数。</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;<span class=\"type\">int</span>&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1; <span class=\"comment\">//无参构造</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v2</span><span class=\"params\">(v1.begin(), v1.end())</span></span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v3</span><span class=\"params\">(<span class=\"number\">10</span>, <span class=\"number\">100</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v3);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\">vector&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">v4</span><span class=\"params\">(v3)</span></span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v4);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>**总结：**vector的多种构造方式没有可比性，灵活使用即可</p>\n<h2 id=\"2-3-vector赋值操作\">2.3 vector赋值操作</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>给vector容器进行赋值</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>\n<p><code>vector&amp; operator=(const vector &amp;vec);</code>//重载等号操作符</p>\n</li>\n<li>\n<p><code>assign(beg, end);</code>       //将[beg, end)区间中的数据拷贝赋值给本身。</p>\n</li>\n<li>\n<p><code>assign(n, elem);</code>        //将n个elem拷贝赋值给本身。</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;<span class=\"type\">int</span>&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//赋值操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1; <span class=\"comment\">//无参构造</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v2;</span><br><span class=\"line\">\tv2 = v1;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v3;</span><br><span class=\"line\">\tv3.<span class=\"built_in\">assign</span>(v1.<span class=\"built_in\">begin</span>(), v1.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v3);</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v4;</span><br><span class=\"line\">\tv4.<span class=\"built_in\">assign</span>(<span class=\"number\">10</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v4);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>总结： vector赋值方式比较简单，使用operator=，或者assign都可以</p>\n<h2 id=\"2-4-vector容量和大小\">2.4  vector容量和大小</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对vector容器的容量和大小操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>\n<p><code>empty(); </code>                            //判断容器是否为空</p>\n</li>\n<li>\n<p><code>capacity();</code>                      //容器的容量</p>\n</li>\n<li>\n<p><code>size();</code>                              //返回容器中元素的个数</p>\n</li>\n<li>\n<p><code>resize(int num);</code>             //重新指定容器的长度为num，若容器变长，则以默认值填充新位置。</p>\n<p>​\t\t\t\t\t      //如果容器变短，则末尾超出容器长度的元素被删除。</p>\n</li>\n<li>\n<p><code>resize(int num, elem);</code>  //重新指定容器的长度为num，若容器变长，则以elem值填充新位置。</p>\n<p>​\t\t\t\t              //如果容器变短，则末尾超出容器长度的元素被删除</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;<span class=\"type\">int</span>&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (v1.<span class=\"built_in\">empty</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;v1为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;v1不为空&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;v1的容量 = &quot;</span> &lt;&lt; v1.<span class=\"built_in\">capacity</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;v1的大小 = &quot;</span> &lt;&lt; v1.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//resize 重新指定大小 ，若指定的更大，默认用0填充新位置，可以利用重载版本替换默认填充</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">resize</span>(<span class=\"number\">15</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//resize 重新指定大小 ，若指定的更小，超出部分元素被删除</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">resize</span>(<span class=\"number\">5</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>判断是否为空  — empty</li>\n<li>返回元素个数  — size</li>\n<li>返回容器容量  — capacity</li>\n<li>重新指定大小  —  resize</li>\n</ul>\n<h2 id=\"2-5-vector插入和删除\">2.5 vector插入和删除</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对vector容器进行插入、删除操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>push_back(ele);</code>                                         //尾部插入元素ele</li>\n<li><code>pop_back();</code>                                                //删除最后一个元素</li>\n<li><code>insert(const_iterator pos, ele);</code>        //迭代器指向位置pos插入元素ele</li>\n<li><code>insert(const_iterator pos, int count,ele);</code>//迭代器指向位置pos插入count个元素ele</li>\n<li><code>erase(const_iterator pos);</code>                     //删除迭代器指向的元素</li>\n<li><code>erase(const_iterator start, const_iterator end);</code>//删除迭代器从start到end之间的元素</li>\n<li><code>clear();</code>                                                        //删除容器中所有元素</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;<span class=\"type\">int</span>&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//插入和删除</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1;</span><br><span class=\"line\">\t<span class=\"comment\">//尾插</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tv1.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tv1.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tv1.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\">\tv1.<span class=\"built_in\">push_back</span>(<span class=\"number\">50</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">\t<span class=\"comment\">//尾删</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">\t<span class=\"comment\">//插入</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">insert</span>(v1.<span class=\"built_in\">begin</span>(), <span class=\"number\">100</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\tv1.<span class=\"built_in\">insert</span>(v1.<span class=\"built_in\">begin</span>(), <span class=\"number\">2</span>, <span class=\"number\">1000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//删除</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">erase</span>(v1.<span class=\"built_in\">begin</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//清空</span></span><br><span class=\"line\">\tv1.<span class=\"built_in\">erase</span>(v1.<span class=\"built_in\">begin</span>(), v1.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\tv1.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>尾插  — push_back</li>\n<li>尾删  — pop_back</li>\n<li>插入  — insert    (位置迭代器)</li>\n<li>删除  — erase  （位置迭代器）</li>\n<li>清空  —  clear</li>\n</ul>\n<h2 id=\"2-6-vector数据存取\">2.6 vector数据存取</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对vector中的数据的存取操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>at(int idx); </code>     //返回索引idx所指的数据</li>\n<li><code>operator[]; </code>       //返回索引idx所指的数据</li>\n<li><code>front(); </code>            //返回容器中第一个数据元素</li>\n<li><code>back();</code>              //返回容器中最后一个数据元素</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v1;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; v1.<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; v1[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; v1.<span class=\"built_in\">size</span>(); i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; v1.<span class=\"built_in\">at</span>(i) &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v1的第一个元素为： &quot;</span> &lt;&lt; v1.<span class=\"built_in\">front</span>() &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v1的最后一个元素为： &quot;</span> &lt;&lt; v1.<span class=\"built_in\">back</span>() &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>除了用迭代器获取vector容器中元素，[ ]和at也可以</li>\n<li>front返回容器第一个元素</li>\n<li>back返回容器最后一个元素</li>\n</ul>\n<h2 id=\"2-7-vector互换容器\">2.7 vector互换容器</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>实现两个容器内元素进行互换</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>swap(vec);</code>  // 将vec与本身的元素互换</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printVector</span><span class=\"params\">(vector&lt;<span class=\"type\">int</span>&gt;&amp; v)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;<span class=\"type\">int</span>&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v1;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v2;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">10</span>; i &gt; <span class=\"number\">0</span>; i--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv2.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v2);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//互换容器</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;互换后&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tv1.<span class=\"built_in\">swap</span>(v2);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v1);</span><br><span class=\"line\">\t<span class=\"built_in\">printVector</span>(v2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100000</span>; i++) &#123;</span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的容量为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">capacity</span>() &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的大小为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tv.<span class=\"built_in\">resize</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的容量为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">capacity</span>() &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的大小为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//收缩内存</span></span><br><span class=\"line\">\t<span class=\"built_in\">vector</span>&lt;<span class=\"type\">int</span>&gt;(v).<span class=\"built_in\">swap</span>(v); <span class=\"comment\">//匿名对象</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的容量为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">capacity</span>() &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v的大小为：&quot;</span> &lt;&lt; v.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test02</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>总结：swap可以使两个容器互换，可以达到实用的收缩内存效果</p>\n<h2 id=\"2-8-vector预留空间\">2.8 vector预留空间</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>减少vector在动态扩展容量时的扩展次数</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>\n<p><code>reserve(int len);</code>//容器预留len个元素长度，预留位置不初始化，元素不可访问。</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//预留空间</span></span><br><span class=\"line\">\tv.<span class=\"built_in\">reserve</span>(<span class=\"number\">100000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span>* p = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">100000</span>; i++) &#123;</span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (p != &amp;v[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">\t\t\tp = &amp;v[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t\t\tnum++;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;num:&quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：如果数据量较大，可以一开始利用reserve预留空间</p>\n<h1>3 deque容器</h1>\n<h2 id=\"3-1-deque容器基本概念\">3.1 deque容器基本概念</h2>\n<p><strong>功能：</strong></p>\n<ul>\n<li>双端数组，可以对头端进行插入删除操作</li>\n</ul>\n<p><strong>deque与vector区别：</strong></p>\n<ul>\n<li>vector对于头部的插入删除效率低，数据量越大，效率越低</li>\n<li>deque相对而言，对头部的插入删除速度回比vector快</li>\n<li>vector访问元素时的速度会比deque快,这和两者内部实现有关</li>\n</ul>\n<p>deque内部工作原理:</p>\n<p>deque内部有个<strong>中控器</strong>，维护每段缓冲区中的内容，缓冲区中存放真实数据</p>\n<p>中控器维护的是每个缓冲区的地址，使得使用deque时像一片连续的内存空间</p>\n<ul>\n<li>deque容器的迭代器也是支持随机访问的</li>\n</ul>\n<h2 id=\"3-2-deque构造函数\">3.2 deque构造函数</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>deque容器构造</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>deque&lt;T&gt;</code> deqT;                      //默认构造形式</li>\n<li><code>deque(beg, end);</code>                  //构造函数将[beg, end)区间中的元素拷贝给本身。</li>\n<li><code>deque(n, elem);</code>                    //构造函数将n个elem拷贝给本身。</li>\n<li><code>deque(const deque &amp;deq);</code>   //拷贝构造函数</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//deque构造</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d1; <span class=\"comment\">//无参构造函数</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\td1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d1);</span><br><span class=\"line\">\t<span class=\"function\">deque&lt;<span class=\"type\">int</span>&gt; <span class=\"title\">d2</span><span class=\"params\">(d1.begin(),d1.end())</span></span>;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;<span class=\"built_in\">d3</span>(<span class=\"number\">10</span>,<span class=\"number\">100</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d3);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;d4 = d3;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d4);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>**总结：**deque容器和vector容器的构造方式几乎一致，灵活使用即可</p>\n<h2 id=\"3-3-deque赋值操作\">3.3 deque赋值操作</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>给deque容器进行赋值</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>\n<p><code>deque&amp; operator=(const deque &amp;deq); </code>         //重载等号操作符</p>\n</li>\n<li>\n<p><code>assign(beg, end);</code>                                           //将 [beg, end)区间中的数据拷贝赋值给本身。</p>\n</li>\n<li>\n<p><code>assign(n, elem);</code>                                             //将n个elem拷贝赋值给本身。</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//赋值操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d1;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\td1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d1);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;d2;</span><br><span class=\"line\">\td2 = d1;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;d3;</span><br><span class=\"line\">\td3.<span class=\"built_in\">assign</span>(d1.<span class=\"built_in\">begin</span>(), d1.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d3);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;d4;</span><br><span class=\"line\">\td4.<span class=\"built_in\">assign</span>(<span class=\"number\">10</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d4);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：deque赋值操作也与vector相同，需熟练掌握</p>\n<h2 id=\"3-4-deque大小操作\">3.4 deque大小操作</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对deque容器的大小进行操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li>\n<p><code>deque.empty();</code>                       //判断容器是否为空</p>\n</li>\n<li>\n<p><code>deque.size();</code>                         //返回容器中元素的个数</p>\n</li>\n<li>\n<p><code>deque.resize(num);</code>                //重新指定容器的长度为num,若容器变长，则以默认值填充新位置。</p>\n<p>​\t\t\t                             //如果容器变短，则末尾超出容器长度的元素被删除。</p>\n</li>\n<li>\n<p><code>deque.resize(num, elem);</code>     //重新指定容器的长度为num,若容器变长，则以elem值填充新位置。</p>\n<p>​                                                     //如果容器变短，则末尾超出容器长度的元素被删除。</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//大小操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d1;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\td1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d1);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//判断容器是否为空</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (d1.<span class=\"built_in\">empty</span>()) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;d1为空!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;d1不为空!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t\t<span class=\"comment\">//统计大小</span></span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;d1的大小为：&quot;</span> &lt;&lt; d1.<span class=\"built_in\">size</span>() &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//重新指定大小</span></span><br><span class=\"line\">\td1.<span class=\"built_in\">resize</span>(<span class=\"number\">15</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d1);</span><br><span class=\"line\"></span><br><span class=\"line\">\td1.<span class=\"built_in\">resize</span>(<span class=\"number\">5</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d1);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>deque没有容量的概念</li>\n<li>判断是否为空   — empty</li>\n<li>返回元素个数   — size</li>\n<li>重新指定个数   — resize</li>\n</ul>\n<h2 id=\"3-5-deque-插入和删除\">3.5 deque 插入和删除</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>向deque容器中插入和删除数据</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<p>两端插入操作：</p>\n<ul>\n<li><code>push_back(elem);</code>          //在容器尾部添加一个数据</li>\n<li><code>push_front(elem);</code>        //在容器头部插入一个数据</li>\n<li><code>pop_back();</code>                   //删除容器最后一个数据</li>\n<li><code>pop_front();</code>                 //删除容器第一个数据</li>\n</ul>\n<p>指定位置操作：</p>\n<ul>\n<li>\n<p><code>insert(pos,elem);</code>         //在pos位置插入一个elem元素的拷贝，返回新数据的位置。</p>\n</li>\n<li>\n<p><code>insert(pos,n,elem);</code>     //在pos位置插入n个elem数据，无返回值。</p>\n</li>\n<li>\n<p><code>insert(pos,beg,end);</code>    //在pos位置插入[beg,end)区间的数据，无返回值。</p>\n</li>\n<li>\n<p><code>clear();</code>                           //清空容器的所有数据</p>\n</li>\n<li>\n<p><code>erase(beg,end);</code>             //删除[beg,end)区间的数据，返回下一个数据的位置。</p>\n</li>\n<li>\n<p><code>erase(pos);</code>                    //删除pos位置的数据，返回下一个数据的位置。</p>\n<p>​</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//两端操作</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d;</span><br><span class=\"line\">\t<span class=\"comment\">//尾插</span></span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//头插</span></span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//尾删</span></span><br><span class=\"line\">\td.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">\t<span class=\"comment\">//头删</span></span><br><span class=\"line\">\td.<span class=\"built_in\">pop_front</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//插入</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d;</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\td.<span class=\"built_in\">insert</span>(d.<span class=\"built_in\">begin</span>(), <span class=\"number\">1000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\td.<span class=\"built_in\">insert</span>(d.<span class=\"built_in\">begin</span>(), <span class=\"number\">2</span>,<span class=\"number\">10000</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt;d2;</span><br><span class=\"line\">\td2.<span class=\"built_in\">push_back</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">\td2.<span class=\"built_in\">push_back</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">\td2.<span class=\"built_in\">push_back</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\td.<span class=\"built_in\">insert</span>(d.<span class=\"built_in\">begin</span>(), d2.<span class=\"built_in\">begin</span>(), d2.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//删除</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test03</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d;</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\td.<span class=\"built_in\">erase</span>(d.<span class=\"built_in\">begin</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">\td.<span class=\"built_in\">erase</span>(d.<span class=\"built_in\">begin</span>(), d.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\td.<span class=\"built_in\">clear</span>();</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//test01();</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//test02();</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">test03</span>();</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>插入和删除提供的位置是迭代器！</li>\n<li>尾插   —  push_back</li>\n<li>尾删   —  pop_back</li>\n<li>头插   —  push_front</li>\n<li>头删   —  pop_front</li>\n</ul>\n<h2 id=\"3-6-deque-数据存取\">3.6 deque 数据存取</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>对deque 中的数据的存取操作</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>at(int idx); </code>     //返回索引idx所指的数据</li>\n<li><code>operator[]; </code>      //返回索引idx所指的数据</li>\n<li><code>front(); </code>            //返回容器中第一个数据元素</li>\n<li><code>back();</code>              //返回容器中最后一个数据元素</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//数据存取</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d;</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; d.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; d[i] &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; d.<span class=\"built_in\">size</span>(); i++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; d.<span class=\"built_in\">at</span>(i) &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;front:&quot;</span> &lt;&lt; d.<span class=\"built_in\">front</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;back:&quot;</span> &lt;&lt; d.<span class=\"built_in\">back</span>() &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：</p>\n<ul>\n<li>除了用迭代器获取deque容器中元素，[ ]和at也可以</li>\n<li>front返回容器第一个元素</li>\n<li>back返回容器最后一个元素</li>\n</ul>\n<h2 id=\"3-7-deque-排序\">3.7  deque 排序</h2>\n<p><strong>功能描述：</strong></p>\n<ul>\n<li>利用算法实现对deque容器进行排序</li>\n</ul>\n<p><strong>算法：</strong></p>\n<ul>\n<li><code>sort(iterator beg, iterator end)</code>  //对beg和end区间内元素进行排序</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;deque&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">printDeque</span><span class=\"params\">(<span class=\"type\">const</span> deque&lt;<span class=\"type\">int</span>&gt;&amp; d)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::const_iterator it = d.<span class=\"built_in\">begin</span>(); it != d.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tdeque&lt;<span class=\"type\">int</span>&gt; d;</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">100</span>);</span><br><span class=\"line\">\td.<span class=\"built_in\">push_front</span>(<span class=\"number\">200</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\">\t<span class=\"built_in\">sort</span>(d.<span class=\"built_in\">begin</span>(), d.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">printDeque</span>(d);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>总结：sort算法非常实用，使用时包含头文件 algorithm即可</p>\n<h1>4 案例-评委打分</h1>\n<h2 id=\"4-1-案例描述\">4.1 案例描述</h2>\n<p>有5名选手：选手ABCDE，10个评委分别对每一名选手打分，去除最高分，去除评委中最低分，取平均分。</p>\n<h2 id=\"4-2-实现步骤\">4.2 实现步骤</h2>\n<ol>\n<li>创建五名选手，放到vector中</li>\n<li>遍历vector容器，取出来每一个选手，执行for循环，可以把10个评分打分存到deque容器中</li>\n<li>sort算法对deque容器中分数排序，去除最高和最低分</li>\n<li>deque容器遍历一遍，累加总分</li>\n<li>获取平均分</li>\n</ol>\n<p><strong>示例代码：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//选手类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">Person</span>(string name, <span class=\"type\">int</span> score)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Name = name;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Score = score;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring m_Name; <span class=\"comment\">//姓名</span></span><br><span class=\"line\">\t<span class=\"type\">int</span> m_Score;  <span class=\"comment\">//平均分</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">createPerson</span><span class=\"params\">(vector&lt;Person&gt;&amp;v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tstring nameSeed = <span class=\"string\">&quot;ABCDE&quot;</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tstring name = <span class=\"string\">&quot;选手&quot;</span>;</span><br><span class=\"line\">\t\tname += nameSeed[i];</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> score = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"function\">Person <span class=\"title\">p</span><span class=\"params\">(name, score)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//将创建的person对象 放入到容器中</span></span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(p);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//打分</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">setScore</span><span class=\"params\">(vector&lt;Person&gt;&amp;v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;Person&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//将评委的分数 放入到deque容器中</span></span><br><span class=\"line\">\t\tdeque&lt;<span class=\"type\">int</span>&gt;d;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"type\">int</span> score = <span class=\"built_in\">rand</span>() % <span class=\"number\">41</span> + <span class=\"number\">60</span>;  <span class=\"comment\">// 60 ~ 100</span></span><br><span class=\"line\">\t\t\td.<span class=\"built_in\">push_back</span>(score);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//cout &lt;&lt; &quot;选手： &quot; &lt;&lt; it-&gt;m_Name &lt;&lt; &quot; 打分： &quot; &lt;&lt; endl;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//for (deque&lt;int&gt;::iterator dit = d.begin(); dit != d.end(); dit++)</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//&#123;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//\tcout &lt;&lt; *dit &lt;&lt; &quot; &quot;;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//&#125;</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//cout &lt;&lt; endl;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//排序</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">sort</span>(d.<span class=\"built_in\">begin</span>(), d.<span class=\"built_in\">end</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//去除最高和最低分</span></span><br><span class=\"line\">\t\td.<span class=\"built_in\">pop_back</span>();</span><br><span class=\"line\">\t\td.<span class=\"built_in\">pop_front</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//取平均分</span></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (deque&lt;<span class=\"type\">int</span>&gt;::iterator dit = d.<span class=\"built_in\">begin</span>(); dit != d.<span class=\"built_in\">end</span>(); dit++)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tsum += *dit; <span class=\"comment\">//累加每个评委的分数</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"type\">int</span> avg = sum / d.<span class=\"built_in\">size</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//将平均分 赋值给选手身上</span></span><br><span class=\"line\">\t\tit-&gt;m_Score = avg;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">showScore</span><span class=\"params\">(vector&lt;Person&gt;&amp;v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;Person&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;姓名： &quot;</span> &lt;&lt; it-&gt;m_Name &lt;&lt; <span class=\"string\">&quot; 平均分： &quot;</span> &lt;&lt; it-&gt;m_Score &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//随机数种子</span></span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>((<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)<span class=\"built_in\">time</span>(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//1、创建5名选手</span></span><br><span class=\"line\">\tvector&lt;Person&gt;v;  <span class=\"comment\">//存放选手容器</span></span><br><span class=\"line\">\t<span class=\"built_in\">createPerson</span>(v);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//测试</span></span><br><span class=\"line\">\t<span class=\"comment\">//for (vector&lt;Person&gt;::iterator it = v.begin(); it != v.end(); it++)</span></span><br><span class=\"line\">\t<span class=\"comment\">//&#123;</span></span><br><span class=\"line\">\t<span class=\"comment\">//\tcout &lt;&lt; &quot;姓名： &quot; &lt;&lt; (*it).m_Name &lt;&lt; &quot; 分数： &quot; &lt;&lt; (*it).m_Score &lt;&lt; endl;</span></span><br><span class=\"line\">\t<span class=\"comment\">//&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//2、给5名选手打分</span></span><br><span class=\"line\">\t<span class=\"built_in\">setScore</span>(v);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//3、显示最后得分</span></span><br><span class=\"line\">\t<span class=\"built_in\">showScore</span>(v);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>总结：</strong> 选取不同的容器操作数据，可以提升代码的效率</p>\n","feature":null,"text":"String，vector，deque....","permalink":"/post/STL常用容器_1","photos":[],"count_time":{"symbolsCount":"26k","symbolsTime":"24 mins."},"categories":[{"name":"STL","slug":"STL","count":5,"path":"api/categories/STL.json"}],"tags":[{"name":"vector","slug":"vector","count":2,"path":"api/tags/vector.json"},{"name":"STL","slug":"STL","count":5,"path":"api/tags/STL.json"},{"name":"String","slug":"String","count":1,"path":"api/tags/String.json"},{"name":"deque","slug":"deque","count":1,"path":"api/tags/deque.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">1 string容器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1-string%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">1.1 string基本概念</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-2-string%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">1.2 string构造函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-3-string%E8%B5%8B%E5%80%BC%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">1.3 string赋值操作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-4-string%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5\"><span class=\"toc-text\">1.4 string字符串拼接</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-5-string%E6%9F%A5%E6%89%BE%E5%92%8C%E6%9B%BF%E6%8D%A2\"><span class=\"toc-text\">1.5 string查找和替换</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-6-string%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%AF%94%E8%BE%83\"><span class=\"toc-text\">1.6 string字符串比较</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-7-string%E5%AD%97%E7%AC%A6%E5%AD%98%E5%8F%96\"><span class=\"toc-text\">1.7 string字符存取</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-8-string%E6%8F%92%E5%85%A5%E5%92%8C%E5%88%A0%E9%99%A4\"><span class=\"toc-text\">1.8 string插入和删除</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-9-string%E5%AD%90%E4%B8%B2\"><span class=\"toc-text\">1.9 string子串</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">2 vector容器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-vector%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">2.1 vector基本概念</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-vector%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">2.2 vector构造函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-3-vector%E8%B5%8B%E5%80%BC%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">2.3 vector赋值操作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-4-vector%E5%AE%B9%E9%87%8F%E5%92%8C%E5%A4%A7%E5%B0%8F\"><span class=\"toc-text\">2.4  vector容量和大小</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-5-vector%E6%8F%92%E5%85%A5%E5%92%8C%E5%88%A0%E9%99%A4\"><span class=\"toc-text\">2.5 vector插入和删除</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-6-vector%E6%95%B0%E6%8D%AE%E5%AD%98%E5%8F%96\"><span class=\"toc-text\">2.6 vector数据存取</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-7-vector%E4%BA%92%E6%8D%A2%E5%AE%B9%E5%99%A8\"><span class=\"toc-text\">2.7 vector互换容器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-8-vector%E9%A2%84%E7%95%99%E7%A9%BA%E9%97%B4\"><span class=\"toc-text\">2.8 vector预留空间</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">3 deque容器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1-deque%E5%AE%B9%E5%99%A8%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">3.1 deque容器基本概念</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2-deque%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">3.2 deque构造函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-3-deque%E8%B5%8B%E5%80%BC%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">3.3 deque赋值操作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-4-deque%E5%A4%A7%E5%B0%8F%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">3.4 deque大小操作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-5-deque-%E6%8F%92%E5%85%A5%E5%92%8C%E5%88%A0%E9%99%A4\"><span class=\"toc-text\">3.5 deque 插入和删除</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-6-deque-%E6%95%B0%E6%8D%AE%E5%AD%98%E5%8F%96\"><span class=\"toc-text\">3.6 deque 数据存取</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-7-deque-%E6%8E%92%E5%BA%8F\"><span class=\"toc-text\">3.7  deque 排序</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">4 案例-评委打分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-1-%E6%A1%88%E4%BE%8B%E6%8F%8F%E8%BF%B0\"><span class=\"toc-text\">4.1 案例描述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-2-%E5%AE%9E%E7%8E%B0%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">4.2 实现步骤</span></a></li></ol></li></ol>","author":{"name":"kiyose408","slug":"blog-author","avatar":"img/kiyose.png","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/kiyose408"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"STL常用容器2","uid":"e365ba1ee6a6112eb6b41afc5aaaf6ad","slug":"STL常用容器_2","date":"2021-07-01T10:49:00.000Z","updated":"2024-05-21T12:43:54.081Z","comments":true,"path":"api/articles/STL常用容器_2.json","keywords":null,"cover":"img/STL.jpg","text":"介绍STL中常用的容器Stack，queue，list，set/multiset，map/multimap。...","permalink":"/post/STL常用容器_2","photos":[],"count_time":{"symbolsCount":"29k","symbolsTime":"26 mins."},"categories":[{"name":"STL","slug":"STL","count":5,"path":"api/categories/STL.json"}],"tags":[{"name":"STL","slug":"STL","count":5,"path":"api/tags/STL.json"},{"name":"Stack","slug":"Stack","count":1,"path":"api/tags/Stack.json"},{"name":"queue","slug":"queue","count":1,"path":"api/tags/queue.json"},{"name":"list","slug":"list","count":1,"path":"api/tags/list.json"},{"name":"set/multiset","slug":"set-multiset","count":1,"path":"api/tags/set-multiset.json"},{"name":"map/multimap","slug":"map-multimap","count":1,"path":"api/tags/map-multimap.json"}],"author":{"name":"kiyose408","slug":"blog-author","avatar":"img/kiyose.png","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/kiyose408"}}}},"feature":null},"next_post":{"title":"类的访问控制","uid":"aa58dd8d3b218c61e8320d0bbec359ae","slug":"类的访问控制","date":"2021-06-17T10:49:36.000Z","updated":"2024-05-21T12:42:58.267Z","comments":true,"path":"api/articles/类的访问控制.json","keywords":null,"cover":"img/C++.jpg","text":"介绍通过关键字来控制类的访问权限，以及拓展到成员函数的访问权限。...","permalink":"/post/类的访问控制","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"类的认识","slug":"类的认识","count":2,"path":"api/categories/类的认识.json"}],"tags":[{"name":"C++","slug":"C","count":18,"path":"api/tags/C.json"},{"name":"成员函数","slug":"成员函数","count":2,"path":"api/tags/成员函数.json"},{"name":"友元","slug":"友元","count":1,"path":"api/tags/友元.json"}],"author":{"name":"kiyose408","slug":"blog-author","avatar":"img/kiyose.png","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/kiyose408"}}}},"feature":null}}