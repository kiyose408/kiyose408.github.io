{"title":"STL常用算法","uid":"c11341765c3dcde8916cd12b11e4e28c","slug":"STL常用算法","date":"2021-07-24T02:49:00.000Z","updated":"2024-05-21T12:44:30.598Z","comments":true,"path":"api/articles/STL常用算法.json","keywords":null,"cover":"img/STL.jpg","content":"<p><strong>概述</strong>:</p>\n<ul>\n<li><p>算法主要是由头文件<code>&lt;algorithm&gt;</code> <code>&lt;functional&gt;</code> <code>&lt;numeric&gt;</code>组成。</p>\n</li>\n<li><p><code>&lt;algorithm&gt;</code>是所有STL头文件中最大的一个，范围涉及到比较、 交换、查找、遍历操作、复制、修改等等</p>\n</li>\n<li><p><code>&lt;numeric&gt;</code>体积很小，只包括几个在序列上面进行简单数学运算的模板函数</p>\n</li>\n<li><p><code>&lt;functional&gt;</code>定义了一些模板类,用以声明函数对象。</p>\n</li>\n</ul>\n<h1 id=\"1-常用遍历算法\"><a href=\"#1-常用遍历算法\" class=\"headerlink\" title=\"1 常用遍历算法\"></a>1 常用遍历算法</h1><p><strong>学习目标：</strong></p>\n<ul>\n<li>掌握常用的遍历算法</li>\n</ul>\n<p><strong>算法简介：</strong></p>\n<ul>\n<li><code>for_each</code>     &#x2F;&#x2F;遍历容器</li>\n<li><code>transform</code>   &#x2F;&#x2F;搬运容器到另一个容器中</li>\n</ul>\n<h2 id=\"1-1-for-each\"><a href=\"#1-1-for-each\" class=\"headerlink\" title=\"1.1 for_each\"></a>1.1 for_each</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>实现遍历容器</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>for_each(iterator beg, iterator end, _func);  </code></p>\n<p>&#x2F;&#x2F; 遍历算法 遍历容器元素</p>\n<p>&#x2F;&#x2F; beg 开始迭代器</p>\n<p>&#x2F;&#x2F; end 结束迭代器</p>\n<p>&#x2F;&#x2F; _func 函数或者函数对象</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//普通函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">print01</span><span class=\"params\">(<span class=\"type\">int</span> val)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tcout &lt;&lt; val &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//函数对象</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">print02</span> </span><br><span class=\"line\">&#123;</span><br><span class=\"line\"> <span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> val)</span> </span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; val &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//for_each算法基本用法</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) </span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//遍历算法</span></span><br><span class=\"line\">\tfor_each(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), print01);</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor_each(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"built_in\">print02</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong>for_each在实际开发中是最常用遍历算法，需要熟练掌握</p>\n<h2 id=\"1-2-transform\"><a href=\"#1-2-transform\" class=\"headerlink\" title=\"1.2 transform\"></a>1.2 transform</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>搬运容器到另一个容器中</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><code>transform(iterator beg1, iterator end1, iterator beg2, _func);</code></li>\n</ul>\n<p>&#x2F;&#x2F;beg1 源容器开始迭代器</p>\n<p>&#x2F;&#x2F;end1 源容器结束迭代器</p>\n<p>&#x2F;&#x2F;beg2 目标容器开始迭代器</p>\n<p>&#x2F;&#x2F;_func 函数或者函数对象</p>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//常用遍历算法  搬运 transform</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">TransForm</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> val;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyPrint</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; val &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;vTarget; <span class=\"comment\">//目标容器</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tvTarget.<span class=\"built_in\">resize</span>(v.<span class=\"built_in\">size</span>()); <span class=\"comment\">// 目标容器需要提前开辟空间</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">transform</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), vTarget.<span class=\"built_in\">begin</span>(), <span class=\"built_in\">TransForm</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor_each(vTarget.<span class=\"built_in\">begin</span>(), vTarget.<span class=\"built_in\">end</span>(), <span class=\"built_in\">MyPrint</span>());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong> 搬运的目标容器必须要提前开辟空间，否则无法正常搬运</p>\n<h1 id=\"2-常用查找算法\"><a href=\"#2-常用查找算法\" class=\"headerlink\" title=\"2 常用查找算法\"></a>2 常用查找算法</h1><p>学习目标：</p>\n<ul>\n<li>掌握常用的查找算法</li>\n</ul>\n<p><strong>算法简介：</strong></p>\n<ul>\n<li><code>find</code>                     &#x2F;&#x2F;查找元素</li>\n<li><code>find_if</code>               &#x2F;&#x2F;按条件查找元素</li>\n<li><code>adjacent_find</code>    &#x2F;&#x2F;查找相邻重复元素</li>\n<li><code>binary_search</code>    &#x2F;&#x2F;二分查找法</li>\n<li><code>count</code>                   &#x2F;&#x2F;统计元素个数</li>\n<li><code>count_if</code>             &#x2F;&#x2F;按条件统计元素个数</li>\n</ul>\n<h2 id=\"2-1-find\"><a href=\"#2-1-find\" class=\"headerlink\" title=\"2.1 find\"></a>2.1 find</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>查找指定元素，找到返回指定元素的迭代器，找不到返回结束迭代器end()</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>find(iterator beg, iterator end, value);  </code></p>\n<p>&#x2F;&#x2F; 按值查找元素，找到返回指定位置迭代器，找不到返回结束迭代器位置</p>\n<p>&#x2F;&#x2F; beg 开始迭代器</p>\n<p>&#x2F;&#x2F; end 结束迭代器</p>\n<p>&#x2F;&#x2F; value 查找的元素</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(i + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//查找容器中是否有 5 这个元素</span></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;::iterator it = <span class=\"built_in\">find</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"number\">5</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (it == v.<span class=\"built_in\">end</span>()) </span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;没有找到!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> </span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;找到:&quot;</span> &lt;&lt; *it &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">Person</span>(string name, <span class=\"type\">int</span> age) </span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Name = name;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Age = age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//重载==</span></span><br><span class=\"line\">\t<span class=\"type\">bool</span> <span class=\"keyword\">operator</span>==(<span class=\"type\">const</span> Person&amp; p) </span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>-&gt;m_Name == p.m_Name &amp;&amp; <span class=\"keyword\">this</span>-&gt;m_Age == p.m_Age) </span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\tstring m_Name;</span><br><span class=\"line\">\t<span class=\"type\">int</span> m_Age;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;Person&gt; v;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//创建数据</span></span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p1</span><span class=\"params\">(<span class=\"string\">&quot;aaa&quot;</span>, <span class=\"number\">10</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p2</span><span class=\"params\">(<span class=\"string\">&quot;bbb&quot;</span>, <span class=\"number\">20</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p3</span><span class=\"params\">(<span class=\"string\">&quot;ccc&quot;</span>, <span class=\"number\">30</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p4</span><span class=\"params\">(<span class=\"string\">&quot;ddd&quot;</span>, <span class=\"number\">40</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p1);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p2);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p3);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p4);</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;Person&gt;::iterator it = <span class=\"built_in\">find</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), p2);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (it == v.<span class=\"built_in\">end</span>()) </span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;没有找到!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> </span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;找到姓名:&quot;</span> &lt;&lt; it-&gt;m_Name &lt;&lt; <span class=\"string\">&quot; 年龄: &quot;</span> &lt;&lt; it-&gt;m_Age &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>总结： 利用find可以在容器中找指定的元素，返回值是<strong>迭代器</strong></p>\n<h2 id=\"2-2-find-if\"><a href=\"#2-2-find-if\" class=\"headerlink\" title=\"2.2 find_if\"></a>2.2 find_if</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>按条件查找元素</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>find_if(iterator beg, iterator end, _Pred);  </code></p>\n<p>&#x2F;&#x2F; 按值查找元素，找到返回指定位置迭代器，找不到返回结束迭代器位置</p>\n<p>&#x2F;&#x2F; beg 开始迭代器</p>\n<p>&#x2F;&#x2F; end 结束迭代器</p>\n<p>&#x2F;&#x2F; _Pred 函数或者谓词（返回bool类型的仿函数）</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//内置数据类型</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">GreaterFive</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> val &gt; <span class=\"number\">5</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(i + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;::iterator it = <span class=\"built_in\">find_if</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"built_in\">GreaterFive</span>());</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (it == v.<span class=\"built_in\">end</span>()) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;没有找到!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;找到大于5的数字:&quot;</span> &lt;&lt; *it &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//自定义数据类型</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">Person</span>(string name, <span class=\"type\">int</span> age)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Name = name;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Age = age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\tstring m_Name;</span><br><span class=\"line\">\t<span class=\"type\">int</span> m_Age;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Greater20</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(Person &amp;p)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> p.m_Age &gt; <span class=\"number\">20</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;Person&gt; v;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//创建数据</span></span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p1</span><span class=\"params\">(<span class=\"string\">&quot;aaa&quot;</span>, <span class=\"number\">10</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p2</span><span class=\"params\">(<span class=\"string\">&quot;bbb&quot;</span>, <span class=\"number\">20</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p3</span><span class=\"params\">(<span class=\"string\">&quot;ccc&quot;</span>, <span class=\"number\">30</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p4</span><span class=\"params\">(<span class=\"string\">&quot;ddd&quot;</span>, <span class=\"number\">40</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p1);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p2);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p3);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p4);</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;Person&gt;::iterator it = <span class=\"built_in\">find_if</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"built_in\">Greater20</span>());</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (it == v.<span class=\"built_in\">end</span>())</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;没有找到!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;找到姓名:&quot;</span> &lt;&lt; it-&gt;m_Name &lt;&lt; <span class=\"string\">&quot; 年龄: &quot;</span> &lt;&lt; it-&gt;m_Age &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//test01();</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test02</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>总结：find_if按条件查找使查找更加灵活，提供的仿函数可以改变不同的策略</p>\n<h2 id=\"2-3-adjacent-find\"><a href=\"#2-3-adjacent-find\" class=\"headerlink\" title=\"2.3 adjacent_find\"></a>2.3 adjacent_find</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>查找相邻重复元素</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>adjacent_find(iterator beg, iterator end);  </code></p>\n<p>&#x2F;&#x2F; 查找相邻重复元素,返回相邻元素的第一个位置的迭代器</p>\n<p>&#x2F;&#x2F; beg 开始迭代器</p>\n<p>&#x2F;&#x2F; end 结束迭代器</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">5</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">4</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">4</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//查找相邻重复元素</span></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;::iterator it = <span class=\"built_in\">adjacent_find</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (it == v.<span class=\"built_in\">end</span>()) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;找不到!&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;找到相邻重复元素为:&quot;</span> &lt;&lt; *it &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>总结：面试题中如果出现查找相邻重复元素，记得用STL中的adjacent_find算法</p>\n<h2 id=\"2-4-binary-search\"><a href=\"#2-4-binary-search\" class=\"headerlink\" title=\"2.4 binary_search\"></a>2.4 binary_search</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>查找指定元素是否存在</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>bool binary_search(iterator beg, iterator end, value);  </code></p>\n<p>&#x2F;&#x2F; 查找指定的元素，查到 返回true  否则false</p>\n<p>&#x2F;&#x2F; 注意: 在<strong>无序序列中不可用</strong></p>\n<p>&#x2F;&#x2F; beg 开始迭代器</p>\n<p>&#x2F;&#x2F; end 结束迭代器</p>\n<p>&#x2F;&#x2F; value 查找的元素</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;v;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//二分查找</span></span><br><span class=\"line\">\t<span class=\"type\">bool</span> ret = <span class=\"built_in\">binary_search</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(),<span class=\"number\">2</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ret)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;找到了&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;未找到&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong>二分查找法查找效率很高，值得注意的是查找的容器中元素必须的有序序列</p>\n<h2 id=\"2-5-count\"><a href=\"#2-5-count\" class=\"headerlink\" title=\"2.5 count\"></a>2.5 count</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>统计元素个数</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>count(iterator beg, iterator end, value);  </code></p>\n<p>&#x2F;&#x2F; 统计元素出现次数</p>\n<p>&#x2F;&#x2F; beg 开始迭代器</p>\n<p>&#x2F;&#x2F; end 结束迭代器</p>\n<p>&#x2F;&#x2F; value 统计的元素</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//内置数据类型</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">4</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">5</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">4</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> num = <span class=\"built_in\">count</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"number\">4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;4的个数为： &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//自定义数据类型</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">Person</span>(string name, <span class=\"type\">int</span> age)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Name = name;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Age = age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"type\">bool</span> <span class=\"keyword\">operator</span>==(<span class=\"type\">const</span> Person &amp; p)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>-&gt;m_Age == p.m_Age)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tstring m_Name;</span><br><span class=\"line\">\t<span class=\"type\">int</span> m_Age;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;Person&gt; v;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p1</span><span class=\"params\">(<span class=\"string\">&quot;刘备&quot;</span>, <span class=\"number\">35</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p2</span><span class=\"params\">(<span class=\"string\">&quot;关羽&quot;</span>, <span class=\"number\">35</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p3</span><span class=\"params\">(<span class=\"string\">&quot;张飞&quot;</span>, <span class=\"number\">35</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p4</span><span class=\"params\">(<span class=\"string\">&quot;赵云&quot;</span>, <span class=\"number\">30</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p5</span><span class=\"params\">(<span class=\"string\">&quot;曹操&quot;</span>, <span class=\"number\">25</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p1);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p2);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p3);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p4);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p5);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"function\">Person <span class=\"title\">p</span><span class=\"params\">(<span class=\"string\">&quot;诸葛亮&quot;</span>,<span class=\"number\">35</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> num = <span class=\"built_in\">count</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), p);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;num = &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//test01();</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test02</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong> 统计自定义数据类型时候，需要配合重载 <code>operator==</code></p>\n<h2 id=\"2-6-count-if\"><a href=\"#2-6-count-if\" class=\"headerlink\" title=\"2.6 count_if\"></a>2.6 count_if</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>按条件统计元素个数</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>count_if(iterator beg, iterator end, _Pred);  </code></p>\n<p>&#x2F;&#x2F; 按条件统计元素出现次数</p>\n<p>&#x2F;&#x2F; beg 开始迭代器</p>\n<p>&#x2F;&#x2F; end 结束迭代器</p>\n<p>&#x2F;&#x2F; _Pred 谓词</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Greater4</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> val &gt;= <span class=\"number\">4</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//内置数据类型</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">4</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">5</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">3</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">4</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">4</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> num = <span class=\"built_in\">count_if</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"built_in\">Greater4</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;大于4的个数为： &quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//自定义数据类型</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">Person</span>(string name, <span class=\"type\">int</span> age)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Name = name;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>-&gt;m_Age = age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tstring m_Name;</span><br><span class=\"line\">\t<span class=\"type\">int</span> m_Age;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">AgeLess35</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">const</span> Person &amp;p)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> p.m_Age &lt; <span class=\"number\">35</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;Person&gt; v;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p1</span><span class=\"params\">(<span class=\"string\">&quot;刘备&quot;</span>, <span class=\"number\">35</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p2</span><span class=\"params\">(<span class=\"string\">&quot;关羽&quot;</span>, <span class=\"number\">35</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p3</span><span class=\"params\">(<span class=\"string\">&quot;张飞&quot;</span>, <span class=\"number\">35</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p4</span><span class=\"params\">(<span class=\"string\">&quot;赵云&quot;</span>, <span class=\"number\">30</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p5</span><span class=\"params\">(<span class=\"string\">&quot;曹操&quot;</span>, <span class=\"number\">25</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p1);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p2);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p3);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p4);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p5);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> num = <span class=\"built_in\">count_if</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"built_in\">AgeLess35</span>());</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;小于35岁的个数：&quot;</span> &lt;&lt; num &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//test01();</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test02</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong>按值统计用count，按条件统计用count_if</p>\n<h1 id=\"3-常用排序算法\"><a href=\"#3-常用排序算法\" class=\"headerlink\" title=\"3 常用排序算法\"></a>3 常用排序算法</h1><p><strong>学习目标：</strong></p>\n<ul>\n<li>掌握常用的排序算法</li>\n</ul>\n<p><strong>算法简介：</strong></p>\n<ul>\n<li><code>sort</code>             &#x2F;&#x2F;对容器内元素进行排序</li>\n<li><code>random_shuffle</code>   &#x2F;&#x2F;洗牌   指定范围内的元素随机调整次序</li>\n<li><code>merge </code>           &#x2F;&#x2F; 容器元素合并，并存储到另一容器中</li>\n<li><code>reverse</code>       &#x2F;&#x2F; 反转指定范围的元素</li>\n</ul>\n<h2 id=\"3-1-sort\"><a href=\"#3-1-sort\" class=\"headerlink\" title=\"3.1 sort\"></a>3.1 sort</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>对容器内元素进行排序</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>sort(iterator beg, iterator end, _Pred);  </code></p>\n<p>&#x2F;&#x2F; 按值查找元素，找到返回指定位置迭代器，找不到返回结束迭代器位置</p>\n<p>&#x2F;&#x2F;  beg    开始迭代器</p>\n<p>&#x2F;&#x2F;  end    结束迭代器</p>\n<p>&#x2F;&#x2F; _Pred  谓词</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">myPrint</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tcout &lt;&lt; val &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">50</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//sort默认从小到大排序</span></span><br><span class=\"line\">\t<span class=\"built_in\">sort</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\tfor_each(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), myPrint);</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//从大到小排序</span></span><br><span class=\"line\">\t<span class=\"built_in\">sort</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"built_in\">greater</span>&lt;<span class=\"type\">int</span>&gt;());</span><br><span class=\"line\">\tfor_each(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), myPrint);</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong>sort属于开发中最常用的算法之一，需熟练掌握</p>\n<h2 id=\"3-2-random-shuffle\"><a href=\"#3-2-random-shuffle\" class=\"headerlink\" title=\"3.2 random_shuffle\"></a>3.2 random_shuffle</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>洗牌   指定范围内的元素随机调整次序</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>random_shuffle(iterator beg, iterator end);  </code></p>\n<p>&#x2F;&#x2F; 指定范围内的元素随机调整次序</p>\n<p>&#x2F;&#x2F; beg 开始迭代器</p>\n<p>&#x2F;&#x2F; end 结束迭代器</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;ctime&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">myPrint</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; val &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">srand</span>((<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)<span class=\"built_in\">time</span>(<span class=\"literal\">NULL</span>));</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span> ; i &lt; <span class=\"number\">10</span>;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tfor_each(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//打乱顺序</span></span><br><span class=\"line\">\t<span class=\"built_in\">random_shuffle</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\tfor_each(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong>random_shuffle洗牌算法比较实用，使用时记得加随机数种子</p>\n<h2 id=\"3-3-merge\"><a href=\"#3-3-merge\" class=\"headerlink\" title=\"3.3 merge\"></a>3.3 merge</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>两个容器元素合并，并存储到另一容器中</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>merge(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);  </code></p>\n<p>&#x2F;&#x2F; 容器元素合并，并存储到另一容器中</p>\n<p>&#x2F;&#x2F; 注意: 两个容器必须是<strong>有序的</strong></p>\n<p>&#x2F;&#x2F; beg1   容器1开始迭代器<br>&#x2F;&#x2F; end1   容器1结束迭代器<br>&#x2F;&#x2F; beg2   容器2开始迭代器<br>&#x2F;&#x2F; end2   容器2结束迭代器<br>&#x2F;&#x2F; dest    目标容器开始迭代器</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">myPrint</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; val &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v2;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span> ; i++) </span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t\tv2.<span class=\"built_in\">push_back</span>(i + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; vtarget;</span><br><span class=\"line\">\t<span class=\"comment\">//目标容器需要提前开辟空间</span></span><br><span class=\"line\">\tvtarget.<span class=\"built_in\">resize</span>(v1.<span class=\"built_in\">size</span>() + v2.<span class=\"built_in\">size</span>());</span><br><span class=\"line\">\t<span class=\"comment\">//合并  需要两个有序序列</span></span><br><span class=\"line\">\t<span class=\"built_in\">merge</span>(v1.<span class=\"built_in\">begin</span>(), v1.<span class=\"built_in\">end</span>(), v2.<span class=\"built_in\">begin</span>(), v2.<span class=\"built_in\">end</span>(), vtarget.<span class=\"built_in\">begin</span>());</span><br><span class=\"line\">\tfor_each(vtarget.<span class=\"built_in\">begin</span>(), vtarget.<span class=\"built_in\">end</span>(), <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong>merge合并的两个容器必须的有序序列</p>\n<h2 id=\"3-4-reverse\"><a href=\"#3-4-reverse\" class=\"headerlink\" title=\"3.4 reverse\"></a>3.4 reverse</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>将容器内元素进行反转</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>reverse(iterator beg, iterator end);  </code></p>\n<p>&#x2F;&#x2F; 反转指定范围的元素</p>\n<p>&#x2F;&#x2F; beg 开始迭代器</p>\n<p>&#x2F;&#x2F; end 结束迭代器</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">myPrint</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; val &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">50</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;反转前： &quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tfor_each(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;反转后： &quot;</span> &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">reverse</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>());</span><br><span class=\"line\">\tfor_each(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong>reverse反转区间内元素，面试题可能涉及到</p>\n<h1 id=\"4-常用拷贝和替换算法\"><a href=\"#4-常用拷贝和替换算法\" class=\"headerlink\" title=\"4 常用拷贝和替换算法\"></a>4 常用拷贝和替换算法</h1><p><strong>学习目标：</strong></p>\n<ul>\n<li>掌握常用的拷贝和替换算法</li>\n</ul>\n<p><strong>算法简介：</strong></p>\n<ul>\n<li><code>copy</code>                      &#x2F;&#x2F; 容器内指定范围的元素拷贝到另一容器中</li>\n<li><code>replace</code>                &#x2F;&#x2F; 将容器内指定范围的旧元素修改为新元素</li>\n<li><code>replace_if </code>          &#x2F;&#x2F; 容器内指定范围满足条件的元素替换为新元素</li>\n<li><code>swap</code>                     &#x2F;&#x2F; 互换两个容器的元素</li>\n</ul>\n<h2 id=\"4-1-copy\"><a href=\"#4-1-copy\" class=\"headerlink\" title=\"4.1 copy\"></a>4.1 copy</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>容器内指定范围的元素拷贝到另一容器中</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>copy(iterator beg, iterator end, iterator dest);  </code></p>\n<p>&#x2F;&#x2F; 按值查找元素，找到返回指定位置迭代器，找不到返回结束迭代器位置</p>\n<p>&#x2F;&#x2F; beg  开始迭代器</p>\n<p>&#x2F;&#x2F; end  结束迭代器</p>\n<p>&#x2F;&#x2F; dest 目标起始迭代器</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">myPrint</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; val &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v2;</span><br><span class=\"line\">\tv2.<span class=\"built_in\">resize</span>(v1.<span class=\"built_in\">size</span>());</span><br><span class=\"line\">\t<span class=\"built_in\">copy</span>(v1.<span class=\"built_in\">begin</span>(), v1.<span class=\"built_in\">end</span>(), v2.<span class=\"built_in\">begin</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor_each(v2.<span class=\"built_in\">begin</span>(), v2.<span class=\"built_in\">end</span>(), <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong>利用copy算法在拷贝时，目标容器记得提前开辟空间</p>\n<h2 id=\"4-2-replace\"><a href=\"#4-2-replace\" class=\"headerlink\" title=\"4.2 replace\"></a>4.2 replace</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>将容器内指定范围的旧元素修改为新元素</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>replace(iterator beg, iterator end, oldvalue, newvalue);  </code></p>\n<p>&#x2F;&#x2F; 将区间内旧元素 替换成 新元素</p>\n<p>&#x2F;&#x2F; beg 开始迭代器</p>\n<p>&#x2F;&#x2F; end 结束迭代器</p>\n<p>&#x2F;&#x2F; oldvalue 旧元素</p>\n<p>&#x2F;&#x2F; newvalue 新元素</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">myPrint</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; val &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">50</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;替换前：&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tfor_each(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//将容器中的20 替换成 2000</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;替换后：&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">replace</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"number\">20</span>,<span class=\"number\">2000</span>);</span><br><span class=\"line\">\tfor_each(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong>replace会替换区间内满足条件的元素</p>\n<h2 id=\"4-3-replace-if\"><a href=\"#4-3-replace-if\" class=\"headerlink\" title=\"4.3 replace_if\"></a>4.3 replace_if</h2><p><strong>功能描述:</strong>  </p>\n<ul>\n<li>将区间内满足条件的元素，替换成指定元素</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>replace_if(iterator beg, iterator end, _pred, newvalue);  </code></p>\n<p>&#x2F;&#x2F; 按条件替换元素，满足条件的替换成指定元素</p>\n<p>&#x2F;&#x2F; beg 开始迭代器</p>\n<p>&#x2F;&#x2F; end 结束迭代器</p>\n<p>&#x2F;&#x2F; _pred 谓词</p>\n<p>&#x2F;&#x2F; newvalue 替换的新元素</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">myPrint</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; val &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">ReplaceGreater30</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> val &gt;= <span class=\"number\">30</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">50</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;替换前：&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tfor_each(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//将容器中大于等于的30 替换成 3000</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;替换后：&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">replace_if</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"built_in\">ReplaceGreater30</span>(), <span class=\"number\">3000</span>);</span><br><span class=\"line\">\tfor_each(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong>replace_if按条件查找，可以利用仿函数灵活筛选满足的条件</p>\n<h2 id=\"4-4-swap\"><a href=\"#4-4-swap\" class=\"headerlink\" title=\"4.4 swap\"></a>4.4 swap</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>互换两个容器的元素</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>swap(container c1, container c2);  </code></p>\n<p>&#x2F;&#x2F; 互换两个容器的元素</p>\n<p>&#x2F;&#x2F; c1容器1</p>\n<p>&#x2F;&#x2F; c2容器2</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">myPrint</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; val &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v2;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t\tv2.<span class=\"built_in\">push_back</span>(i+<span class=\"number\">100</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;交换前： &quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tfor_each(v1.<span class=\"built_in\">begin</span>(), v1.<span class=\"built_in\">end</span>(), <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">\tfor_each(v2.<span class=\"built_in\">begin</span>(), v2.<span class=\"built_in\">end</span>(), <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;交换后： &quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">swap</span>(v1, v2);</span><br><span class=\"line\">\tfor_each(v1.<span class=\"built_in\">begin</span>(), v1.<span class=\"built_in\">end</span>(), <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">\tfor_each(v2.<span class=\"built_in\">begin</span>(), v2.<span class=\"built_in\">end</span>(), <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong>swap交换容器时，注意交换的容器要同种类型</p>\n<h1 id=\"5-常用算术生成算法\"><a href=\"#5-常用算术生成算法\" class=\"headerlink\" title=\"5 常用算术生成算法\"></a>5 常用算术生成算法</h1><p><strong>学习目标：</strong></p>\n<ul>\n<li>掌握常用的算术生成算法</li>\n</ul>\n<p><strong>注意：</strong></p>\n<ul>\n<li>算术生成算法属于小型算法，使用时包含的头文件为 <code>#include &lt;numeric&gt;</code></li>\n</ul>\n<p><strong>算法简介：</strong></p>\n<ul>\n<li><p><code>accumulate</code>      &#x2F;&#x2F; 计算容器元素累计总和</p>\n</li>\n<li><p><code>fill</code>                 &#x2F;&#x2F; 向容器中添加元素</p>\n<p>​</p>\n</li>\n</ul>\n<h2 id=\"5-1-accumulate\"><a href=\"#5-1-accumulate\" class=\"headerlink\" title=\"5.1 accumulate\"></a>5.1 accumulate</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>计算区间内 容器元素累计总和</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>accumulate(iterator beg, iterator end, value);  </code></p>\n<p>&#x2F;&#x2F; 计算容器元素累计总和</p>\n<p>&#x2F;&#x2F; beg 开始迭代器</p>\n<p>&#x2F;&#x2F; end 结束迭代器</p>\n<p>&#x2F;&#x2F; value 起始值</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;numeric&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">\t\tv.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> total = <span class=\"built_in\">accumulate</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;total = &quot;</span> &lt;&lt; total &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong>accumulate使用时头文件注意是 numeric，这个算法很实用</p>\n<h2 id=\"5-2-fill\"><a href=\"#5-2-fill\" class=\"headerlink\" title=\"5.2 fill\"></a>5.2 fill</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>向容器中填充指定的元素</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>fill(iterator beg, iterator end, value);  </code></p>\n<p>&#x2F;&#x2F; 向容器中填充元素</p>\n<p>&#x2F;&#x2F; beg 开始迭代器</p>\n<p>&#x2F;&#x2F; end 结束迭代器</p>\n<p>&#x2F;&#x2F; value 填充的值</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;numeric&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">myPrint</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; val &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">\tv.<span class=\"built_in\">resize</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\t<span class=\"comment\">//填充</span></span><br><span class=\"line\">\t<span class=\"built_in\">fill</span>(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"number\">100</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor_each(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong>利用fill可以将容器区间内元素填充为 指定的值</p>\n<h1 id=\"6-常用集合算法\"><a href=\"#6-常用集合算法\" class=\"headerlink\" title=\"6 常用集合算法\"></a>6 常用集合算法</h1><p><strong>学习目标：</strong></p>\n<ul>\n<li>掌握常用的集合算法</li>\n</ul>\n<p><strong>算法简介：</strong></p>\n<ul>\n<li><p><code>set_intersection</code>          &#x2F;&#x2F; 求两个容器的交集</p>\n</li>\n<li><p><code>set_union</code>                       &#x2F;&#x2F; 求两个容器的并集</p>\n</li>\n<li><p><code>set_difference </code>              &#x2F;&#x2F; 求两个容器的差集</p>\n<p>​</p>\n</li>\n</ul>\n<h2 id=\"6-1-set-intersection\"><a href=\"#6-1-set-intersection\" class=\"headerlink\" title=\"6.1 set_intersection\"></a>6.1 set_intersection</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>求两个容器的交集</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>set_intersection(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);  </code></p>\n<p>&#x2F;&#x2F; 求两个集合的交集</p>\n<p>&#x2F;&#x2F; <strong>注意:两个集合必须是有序序列</strong></p>\n<p>&#x2F;&#x2F; beg1 容器1开始迭代器<br>&#x2F;&#x2F; end1 容器1结束迭代器<br>&#x2F;&#x2F; beg2 容器2开始迭代器<br>&#x2F;&#x2F; end2 容器2结束迭代器<br>&#x2F;&#x2F; dest 目标容器开始迭代器</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">myPrint</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; val &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v2;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t\tv2.<span class=\"built_in\">push_back</span>(i+<span class=\"number\">5</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; vTarget;</span><br><span class=\"line\">\t<span class=\"comment\">//取两个里面较小的值给目标容器开辟空间</span></span><br><span class=\"line\">\tvTarget.<span class=\"built_in\">resize</span>(<span class=\"built_in\">min</span>(v1.<span class=\"built_in\">size</span>(), v2.<span class=\"built_in\">size</span>()));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//返回目标容器的最后一个元素的迭代器地址</span></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;::iterator itEnd = </span><br><span class=\"line\">        <span class=\"built_in\">set_intersection</span>(v1.<span class=\"built_in\">begin</span>(), v1.<span class=\"built_in\">end</span>(), v2.<span class=\"built_in\">begin</span>(), v2.<span class=\"built_in\">end</span>(), vTarget.<span class=\"built_in\">begin</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor_each(vTarget.<span class=\"built_in\">begin</span>(), itEnd, <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong> </p>\n<ul>\n<li>求交集的两个集合必须的有序序列</li>\n<li>目标容器开辟空间需要从<strong>两个容器中取小值</strong></li>\n<li>set_intersection返回值既是交集中最后一个元素的位置</li>\n</ul>\n<h2 id=\"6-2-set-union\"><a href=\"#6-2-set-union\" class=\"headerlink\" title=\"6.2 set_union\"></a>6.2 set_union</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>求两个集合的并集</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>set_union(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);  </code></p>\n<p>&#x2F;&#x2F; 求两个集合的并集</p>\n<p>&#x2F;&#x2F; <strong>注意:两个集合必须是有序序列</strong></p>\n<p>&#x2F;&#x2F; beg1 容器1开始迭代器<br>&#x2F;&#x2F; end1 容器1结束迭代器<br>&#x2F;&#x2F; beg2 容器2开始迭代器<br>&#x2F;&#x2F; end2 容器2结束迭代器<br>&#x2F;&#x2F; dest 目标容器开始迭代器</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">myPrint</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; val &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v2;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t\tv2.<span class=\"built_in\">push_back</span>(i+<span class=\"number\">5</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; vTarget;</span><br><span class=\"line\">\t<span class=\"comment\">//取两个容器的和给目标容器开辟空间</span></span><br><span class=\"line\">\tvTarget.<span class=\"built_in\">resize</span>(v1.<span class=\"built_in\">size</span>() + v2.<span class=\"built_in\">size</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//返回目标容器的最后一个元素的迭代器地址</span></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;::iterator itEnd = </span><br><span class=\"line\">        <span class=\"built_in\">set_union</span>(v1.<span class=\"built_in\">begin</span>(), v1.<span class=\"built_in\">end</span>(), v2.<span class=\"built_in\">begin</span>(), v2.<span class=\"built_in\">end</span>(), vTarget.<span class=\"built_in\">begin</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">\tfor_each(vTarget.<span class=\"built_in\">begin</span>(), itEnd, <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong> </p>\n<ul>\n<li>求并集的两个集合必须的有序序列</li>\n<li>目标容器开辟空间需要<strong>两个容器相加</strong></li>\n<li>set_union返回值既是并集中最后一个元素的位置</li>\n</ul>\n<h2 id=\"6-3-set-difference\"><a href=\"#6-3-set-difference\" class=\"headerlink\" title=\"6.3  set_difference\"></a>6.3  set_difference</h2><p><strong>功能描述：</strong></p>\n<ul>\n<li>求两个集合的差集</li>\n</ul>\n<p><strong>函数原型：</strong></p>\n<ul>\n<li><p><code>set_difference(iterator beg1, iterator end1, iterator beg2, iterator end2, iterator dest);  </code></p>\n<p>&#x2F;&#x2F; 求两个集合的差集</p>\n<p>&#x2F;&#x2F; <strong>注意:两个集合必须是有序序列</strong></p>\n<p>&#x2F;&#x2F; beg1 容器1开始迭代器<br>&#x2F;&#x2F; end1 容器1结束迭代器<br>&#x2F;&#x2F; beg2 容器2开始迭代器<br>&#x2F;&#x2F; end2 容器2结束迭代器<br>&#x2F;&#x2F; dest 目标容器开始迭代器</p>\n<p>​</p>\n</li>\n</ul>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">myPrint</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">operator</span><span class=\"params\">()</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\">\t</span>&#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; val &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v2;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">10</span>; i++) &#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i);</span><br><span class=\"line\">\t\tv2.<span class=\"built_in\">push_back</span>(i+<span class=\"number\">5</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; vTarget;</span><br><span class=\"line\">\t<span class=\"comment\">//取两个里面较大的值给目标容器开辟空间</span></span><br><span class=\"line\">\tvTarget.<span class=\"built_in\">resize</span>( <span class=\"built_in\">max</span>(v1.<span class=\"built_in\">size</span>() , v2.<span class=\"built_in\">size</span>()));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//返回目标容器的最后一个元素的迭代器地址</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v1与v2的差集为： &quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;::iterator itEnd = </span><br><span class=\"line\">        <span class=\"built_in\">set_difference</span>(v1.<span class=\"built_in\">begin</span>(), v1.<span class=\"built_in\">end</span>(), v2.<span class=\"built_in\">begin</span>(), v2.<span class=\"built_in\">end</span>(), vTarget.<span class=\"built_in\">begin</span>());</span><br><span class=\"line\">\tfor_each(vTarget.<span class=\"built_in\">begin</span>(), itEnd, <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;v2与v1的差集为： &quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">\titEnd = <span class=\"built_in\">set_difference</span>(v2.<span class=\"built_in\">begin</span>(), v2.<span class=\"built_in\">end</span>(), v1.<span class=\"built_in\">begin</span>(), v1.<span class=\"built_in\">end</span>(), vTarget.<span class=\"built_in\">begin</span>());</span><br><span class=\"line\">\tfor_each(vTarget.<span class=\"built_in\">begin</span>(), itEnd, <span class=\"built_in\">myPrint</span>());</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>总结：</strong> </p>\n<ul>\n<li>求差集的两个集合必须的有序序列</li>\n<li>目标容器开辟空间需要从<strong>两个容器取较大值</strong></li>\n<li>set_difference返回值既是差集中最后一个元素的位置</li>\n</ul>\n","feature":null,"text":"深入浅出STL常用算法，涵盖遍历、查找、排序、集合操作等，结合实例代码讲解。...","permalink":"/post/STL常用算法","photos":[],"count_time":{"symbolsCount":"24k","symbolsTime":"22 mins."},"categories":[{"name":"STL","slug":"STL","count":5,"path":"api/categories/STL.json"}],"tags":[{"name":"STL","slug":"STL","count":5,"path":"api/tags/STL.json"},{"name":"算法","slug":"算法","count":2,"path":"api/tags/算法.json"},{"name":"遍历","slug":"遍历","count":1,"path":"api/tags/遍历.json"},{"name":"查找","slug":"查找","count":1,"path":"api/tags/查找.json"},{"name":"排序","slug":"排序","count":1,"path":"api/tags/排序.json"},{"name":"集合算法","slug":"集合算法","count":1,"path":"api/tags/集合算法.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E5%B8%B8%E7%94%A8%E9%81%8D%E5%8E%86%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">1 常用遍历算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1-for-each\"><span class=\"toc-text\">1.1 for_each</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-2-transform\"><span class=\"toc-text\">1.2 transform</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E5%B8%B8%E7%94%A8%E6%9F%A5%E6%89%BE%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">2 常用查找算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-find\"><span class=\"toc-text\">2.1 find</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-find-if\"><span class=\"toc-text\">2.2 find_if</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-3-adjacent-find\"><span class=\"toc-text\">2.3 adjacent_find</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-4-binary-search\"><span class=\"toc-text\">2.4 binary_search</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-5-count\"><span class=\"toc-text\">2.5 count</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-6-count-if\"><span class=\"toc-text\">2.6 count_if</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E5%B8%B8%E7%94%A8%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">3 常用排序算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1-sort\"><span class=\"toc-text\">3.1 sort</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2-random-shuffle\"><span class=\"toc-text\">3.2 random_shuffle</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-3-merge\"><span class=\"toc-text\">3.3 merge</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-4-reverse\"><span class=\"toc-text\">3.4 reverse</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E5%B8%B8%E7%94%A8%E6%8B%B7%E8%B4%9D%E5%92%8C%E6%9B%BF%E6%8D%A2%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">4 常用拷贝和替换算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-1-copy\"><span class=\"toc-text\">4.1 copy</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-2-replace\"><span class=\"toc-text\">4.2 replace</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-3-replace-if\"><span class=\"toc-text\">4.3 replace_if</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-4-swap\"><span class=\"toc-text\">4.4 swap</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-%E5%B8%B8%E7%94%A8%E7%AE%97%E6%9C%AF%E7%94%9F%E6%88%90%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">5 常用算术生成算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-1-accumulate\"><span class=\"toc-text\">5.1 accumulate</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-2-fill\"><span class=\"toc-text\">5.2 fill</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#6-%E5%B8%B8%E7%94%A8%E9%9B%86%E5%90%88%E7%AE%97%E6%B3%95\"><span class=\"toc-text\">6 常用集合算法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-1-set-intersection\"><span class=\"toc-text\">6.1 set_intersection</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-2-set-union\"><span class=\"toc-text\">6.2 set_union</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#6-3-set-difference\"><span class=\"toc-text\">6.3  set_difference</span></a></li></ol></li></ol>","author":{"name":"kiyose408","slug":"blog-author","avatar":"img/kiyose.png","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/kiyose408"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"内存分区模型","uid":"bddeee4d46cae4292f5af8a8347e08fc","slug":"内存分区模型","date":"2021-07-31T03:49:00.000Z","updated":"2024-05-21T12:44:57.967Z","comments":true,"path":"api/articles/内存分区模型.json","keywords":null,"cover":"img/c01.jpg","text":"介绍C++程序内存四区划分，包括代码区、全局区、栈区、堆区的特点及访问权限。...","permalink":"/post/内存分区模型","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"C++高级","slug":"C-高级","count":9,"path":"api/categories/C-高级.json"}],"tags":[{"name":"C++","slug":"C","count":18,"path":"api/tags/C.json"},{"name":"内存管理","slug":"内存管理","count":4,"path":"api/tags/内存管理.json"},{"name":"分区模型","slug":"分区模型","count":3,"path":"api/tags/分区模型.json"}],"author":{"name":"kiyose408","slug":"blog-author","avatar":"img/kiyose.png","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/kiyose408"}}}},"feature":null},"next_post":{"title":"C++模版","uid":"59f4fe88c44206beeb3d56cc24c7cea8","slug":"C++模板","date":"2021-07-16T10:50:36.000Z","updated":"2024-05-21T12:44:19.118Z","comments":true,"path":"api/articles/C++模板.json","keywords":null,"cover":"img/c01.jpg","text":"模板就是建立通用的模具，大大提高复用性...","permalink":"/post/C++模板","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[{"name":"C++高级","slug":"C-高级","count":9,"path":"api/categories/C-高级.json"}],"tags":[{"name":"C++","slug":"C","count":18,"path":"api/tags/C.json"},{"name":"函数模版","slug":"函数模版","count":1,"path":"api/tags/函数模版.json"},{"name":"类模版","slug":"类模版","count":1,"path":"api/tags/类模版.json"}],"author":{"name":"kiyose408","slug":"blog-author","avatar":"img/kiyose.png","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/kiyose408"}}}}}}