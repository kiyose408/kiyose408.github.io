{"title":"STL库入门","uid":"d29599c9d95bf25edb61aa3cfaccef26","slug":"STL库入门","date":"2021-06-23T10:49:00.000Z","updated":"2024-05-21T12:43:33.156Z","comments":true,"path":"api/articles/STL库入门.json","keywords":null,"cover":"img/STL.jpg","content":"<h1>STL初识</h1>\n<h2 id=\"1-STL的诞生\">1 STL的诞生</h2>\n<ul>\n<li>\n<p>长久以来，软件界一直希望建立一种可重复利用的东西</p>\n</li>\n<li>\n<p>C++的<strong>面向对象</strong>和<strong>泛型编程</strong>思想，目的就是<strong>复用性的提升</strong></p>\n</li>\n<li>\n<p>大多情况下，数据结构和算法都未能有一套标准,导致被迫从事大量重复工作</p>\n</li>\n<li>\n<p>为了建立数据结构和算法的一套标准,诞生了<strong>STL</strong></p>\n<p>​</p>\n</li>\n</ul>\n<h2 id=\"2-STL基本概念\">2 STL基本概念</h2>\n<ul>\n<li>STL(Standard Template Library,<strong>标准模板库</strong>)</li>\n<li>STL 从广义上分为: <strong>容器(container) 算法(algorithm) 迭代器(iterator)</strong></li>\n<li><strong>容器</strong>和<strong>算法</strong>之间通过<strong>迭代器</strong>进行无缝连接。</li>\n<li>STL 几乎所有的代码都采用了模板类或者模板函数</li>\n</ul>\n<h2 id=\"3-STL六大组件\">3 STL六大组件</h2>\n<p>STL大体分为六大组件，分别是:<strong>容器、算法、迭代器、仿函数、适配器（配接器）、空间配置器</strong></p>\n<ol>\n<li>容器：各种数据结构，如vector、list、deque、set、map等,用来存放数据。</li>\n<li>算法：各种常用的算法，如sort、find、copy、for_each等</li>\n<li>迭代器：扮演了容器与算法之间的胶合剂。</li>\n<li>仿函数：行为类似函数，可作为算法的某种策略。</li>\n<li>适配器：一种用来修饰容器或者仿函数或迭代器接口的东西。</li>\n<li>空间配置器：负责空间的配置与管理。</li>\n</ol>\n<h2 id=\"4-STL中容器、算法、迭代器\">4  STL中容器、算法、迭代器</h2>\n<p>**容器：**置物之所也</p>\n<p>STL<strong>容器</strong>就是将运用<strong>最广泛的一些数据结构</strong>实现出来</p>\n<p>常用的数据结构：数组, 链表,树, 栈, 队列, 集合, 映射表 等</p>\n<p>这些容器分为<strong>序列式容器</strong>和<strong>关联式容器</strong>两种:</p>\n<p>​\t<strong>序列式容器</strong>:强调值的排序，序列式容器中的每个元素均有固定的位置。<br>\n<strong>关联式容器</strong>:二叉树结构，各元素之间没有严格的物理上的顺序关系</p>\n<p>**算法：**问题之解法也</p>\n<p>有限的步骤，解决逻辑或数学上的问题，这一门学科我们叫做算法(Algorithms)</p>\n<p>算法分为:<strong>质变算法</strong>和<strong>非质变算法</strong>。</p>\n<p>质变算法：是指运算过程中会更改区间内的元素的内容。例如拷贝，替换，删除等等</p>\n<p>非质变算法：是指运算过程中不会更改区间内的元素内容，例如查找、计数、遍历、寻找极值等等</p>\n<p>**迭代器：**容器和算法之间粘合剂</p>\n<p>提供一种方法，使之能够依序寻访某个容器所含的各个元素，而又无需暴露该容器的内部表示方式。</p>\n<p>每个容器都有自己专属的迭代器</p>\n<p>迭代器使用非常类似于指针，初学阶段我们可以先理解迭代器为指针</p>\n<p>迭代器种类：</p>\n<table>\n<thead>\n<tr>\n<th>种类</th>\n<th>功能</th>\n<th>支持运算</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>输入迭代器</td>\n<td>对数据的只读访问</td>\n<td>只读，支持++、==、！=</td>\n</tr>\n<tr>\n<td>输出迭代器</td>\n<td>对数据的只写访问</td>\n<td>只写，支持++</td>\n</tr>\n<tr>\n<td>前向迭代器</td>\n<td>读写操作，并能向前推进迭代器</td>\n<td>读写，支持++、==、！=</td>\n</tr>\n<tr>\n<td>双向迭代器</td>\n<td>读写操作，并能向前和向后操作</td>\n<td>读写，支持++、–，</td>\n</tr>\n<tr>\n<td>随机访问迭代器</td>\n<td>读写操作，可以以跳跃的方式访问任意数据，功能最强的迭代器</td>\n<td>读写，支持++、–、[n]、-n、&lt;、&lt;=、&gt;、&gt;=</td>\n</tr>\n</tbody>\n</table>\n<p>常用的容器中迭代器种类为双向迭代器，和随机访问迭代器</p>\n<h2 id=\"5-容器算法迭代器初识\">5 容器算法迭代器初识</h2>\n<p>了解STL中容器、算法、迭代器概念之后，我们利用代码感受STL的魅力</p>\n<p>STL中最常用的容器为Vector，可以理解为数组，下面我们将学习如何向这个容器中插入数据、并遍历这个容器</p>\n<h3 id=\"5-1-vector存放内置数据类型\">5.1 vector存放内置数据类型</h3>\n<p>容器：     <code>vector</code></p>\n<p>算法：     <code>for_each</code></p>\n<p>迭代器： <code>vector&lt;int&gt;::iterator</code></p>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">MyPrint</span><span class=\"params\">(<span class=\"type\">int</span> val)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tcout &lt;&lt; val &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//创建vector容器对象，并且通过模板参数指定容器中存放的数据的类型</span></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v;</span><br><span class=\"line\">\t<span class=\"comment\">//向容器中放数据</span></span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">10</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">20</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">30</span>);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(<span class=\"number\">40</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//每一个容器都有自己的迭代器，迭代器是用来遍历容器中的元素</span></span><br><span class=\"line\">\t<span class=\"comment\">//v.begin()返回迭代器，这个迭代器指向容器中第一个数据</span></span><br><span class=\"line\">\t<span class=\"comment\">//v.end()返回迭代器，这个迭代器指向容器元素的最后一个元素的下一个位置</span></span><br><span class=\"line\">\t<span class=\"comment\">//vector&lt;int&gt;::iterator 拿到vector&lt;int&gt;这种容器的迭代器类型</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;::iterator pBegin = v.<span class=\"built_in\">begin</span>();</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt;::iterator pEnd = v.<span class=\"built_in\">end</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//第一种遍历方式：</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span> (pBegin != pEnd) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *pBegin &lt;&lt; endl;</span><br><span class=\"line\">\t\tpBegin++;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//第二种遍历方式：</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;<span class=\"type\">int</span>&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; *it &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tcout &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//第三种遍历方式：</span></span><br><span class=\"line\">\t<span class=\"comment\">//使用STL提供标准遍历算法  头文件 algorithm</span></span><br><span class=\"line\">\tfor_each(v.<span class=\"built_in\">begin</span>(), v.<span class=\"built_in\">end</span>(), MyPrint);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-2-Vector存放自定义数据类型\">5.2 Vector存放自定义数据类型</h3>\n<p>学习目标：vector中存放自定义数据类型，并打印输出</p>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//自定义数据类型</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\t<span class=\"built_in\">Person</span>(string name, <span class=\"type\">int</span> age) &#123;</span><br><span class=\"line\">\t\tmName = name;</span><br><span class=\"line\">\t\tmAge = age;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">\tstring mName;</span><br><span class=\"line\">\t<span class=\"type\">int</span> mAge;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"comment\">//存放对象</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;Person&gt; v;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//创建数据</span></span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p1</span><span class=\"params\">(<span class=\"string\">&quot;aaa&quot;</span>, <span class=\"number\">10</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p2</span><span class=\"params\">(<span class=\"string\">&quot;bbb&quot;</span>, <span class=\"number\">20</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p3</span><span class=\"params\">(<span class=\"string\">&quot;ccc&quot;</span>, <span class=\"number\">30</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p4</span><span class=\"params\">(<span class=\"string\">&quot;ddd&quot;</span>, <span class=\"number\">40</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p5</span><span class=\"params\">(<span class=\"string\">&quot;eee&quot;</span>, <span class=\"number\">50</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p1);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p2);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p3);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p4);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(p5);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;Person&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;Name:&quot;</span> &lt;&lt; (*it).mName &lt;&lt; <span class=\"string\">&quot; Age:&quot;</span> &lt;&lt; (*it).mAge &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//放对象指针</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test02</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;Person*&gt; v;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//创建数据</span></span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p1</span><span class=\"params\">(<span class=\"string\">&quot;aaa&quot;</span>, <span class=\"number\">10</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p2</span><span class=\"params\">(<span class=\"string\">&quot;bbb&quot;</span>, <span class=\"number\">20</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p3</span><span class=\"params\">(<span class=\"string\">&quot;ccc&quot;</span>, <span class=\"number\">30</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p4</span><span class=\"params\">(<span class=\"string\">&quot;ddd&quot;</span>, <span class=\"number\">40</span>)</span></span>;</span><br><span class=\"line\">\t<span class=\"function\">Person <span class=\"title\">p5</span><span class=\"params\">(<span class=\"string\">&quot;eee&quot;</span>, <span class=\"number\">50</span>)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(&amp;p1);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(&amp;p2);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(&amp;p3);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(&amp;p4);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(&amp;p5);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;Person*&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\">\t\tPerson * p = (*it);</span><br><span class=\"line\">\t\tcout &lt;&lt; <span class=\"string\">&quot;Name:&quot;</span> &lt;&lt; p-&gt;mName &lt;&lt; <span class=\"string\">&quot; Age:&quot;</span> &lt;&lt; (*it)-&gt;mAge &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"built_in\">test02</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-3-Vector容器嵌套容器\">5.3 Vector容器嵌套容器</h3>\n<p>学习目标：容器中嵌套容器，我们将所有数据进行遍历输出</p>\n<p><strong>示例：</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;vector&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//容器嵌套容器</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">test01</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt; vector&lt;<span class=\"type\">int</span>&gt; &gt;  v;</span><br><span class=\"line\"></span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v1;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v2;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v3;</span><br><span class=\"line\">\tvector&lt;<span class=\"type\">int</span>&gt; v4;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++) &#123;</span><br><span class=\"line\">\t\tv1.<span class=\"built_in\">push_back</span>(i + <span class=\"number\">1</span>);</span><br><span class=\"line\">\t\tv2.<span class=\"built_in\">push_back</span>(i + <span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tv3.<span class=\"built_in\">push_back</span>(i + <span class=\"number\">3</span>);</span><br><span class=\"line\">\t\tv4.<span class=\"built_in\">push_back</span>(i + <span class=\"number\">4</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//将容器元素插入到vector v中</span></span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(v1);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(v2);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(v3);</span><br><span class=\"line\">\tv.<span class=\"built_in\">push_back</span>(v4);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> (vector&lt;vector&lt;<span class=\"type\">int</span>&gt;&gt;::iterator it = v.<span class=\"built_in\">begin</span>(); it != v.<span class=\"built_in\">end</span>(); it++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">for</span> (vector&lt;<span class=\"type\">int</span>&gt;::iterator vit = (*it).<span class=\"built_in\">begin</span>(); vit != (*it).<span class=\"built_in\">end</span>(); vit++) &#123;</span><br><span class=\"line\">\t\t\tcout &lt;&lt; *vit &lt;&lt; <span class=\"string\">&quot; &quot;</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tcout &lt;&lt; endl;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","feature":true,"text":"STL(Standard Template Library,标准模板库)。STL从广义上分为容器(container) 算法(algorithm) 迭代器(iterator)...","permalink":"/post/STL库入门","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"STL","slug":"STL","count":5,"path":"api/categories/STL.json"}],"tags":[{"name":"C++","slug":"C","count":18,"path":"api/tags/C.json"},{"name":"STL","slug":"STL","count":5,"path":"api/tags/STL.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">STL初识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-STL%E7%9A%84%E8%AF%9E%E7%94%9F\"><span class=\"toc-text\">1 STL的诞生</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-STL%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">2 STL基本概念</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-STL%E5%85%AD%E5%A4%A7%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">3 STL六大组件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-STL%E4%B8%AD%E5%AE%B9%E5%99%A8%E3%80%81%E7%AE%97%E6%B3%95%E3%80%81%E8%BF%AD%E4%BB%A3%E5%99%A8\"><span class=\"toc-text\">4  STL中容器、算法、迭代器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5-%E5%AE%B9%E5%99%A8%E7%AE%97%E6%B3%95%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%88%9D%E8%AF%86\"><span class=\"toc-text\">5 容器算法迭代器初识</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-1-vector%E5%AD%98%E6%94%BE%E5%86%85%E7%BD%AE%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">5.1 vector存放内置数据类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-2-Vector%E5%AD%98%E6%94%BE%E8%87%AA%E5%AE%9A%E4%B9%89%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">5.2 Vector存放自定义数据类型</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-3-Vector%E5%AE%B9%E5%99%A8%E5%B5%8C%E5%A5%97%E5%AE%B9%E5%99%A8\"><span class=\"toc-text\">5.3 Vector容器嵌套容器</span></a></li></ol></li></ol></li></ol>","author":{"name":"kiyose408","slug":"blog-author","avatar":"img/kiyose.png","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/kiyose408"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"如何使用Gitbook搭建自己的笔记网站","uid":"414c4f40ff95d974f69d0698f4a5c5a7","slug":"如何使用Gitbook搭建自己的笔记网站","date":"2022-02-19T04:00:00.000Z","updated":"2024-06-03T03:50:25.008Z","comments":true,"path":"api/articles/如何使用Gitbook搭建自己的笔记网站.json","keywords":null,"cover":"img/web.jpg","text":"使用GitBook搭建自己的笔记网站或知识库可以分为几个基本步骤。...","permalink":"/post/如何使用Gitbook搭建自己的笔记网站","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"实用教程","slug":"实用教程","count":7,"path":"api/categories/实用教程.json"}],"tags":[{"name":"网站搭建","slug":"网站搭建","count":2,"path":"api/tags/网站搭建.json"},{"name":"实用教程","slug":"实用教程","count":2,"path":"api/tags/实用教程.json"},{"name":"Gitbook","slug":"Gitbook","count":1,"path":"api/tags/Gitbook.json"}],"author":{"name":"kiyose408","slug":"blog-author","avatar":"img/kiyose.png","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/kiyose408"}}}},"feature":true},"next_post":{"title":"模版特例化","uid":"698bdaa973d597a4a390a291dbaefc44","slug":"模版特例化","date":"2022-04-21T15:49:00.000Z","updated":"2024-05-23T08:26:22.610Z","comments":true,"path":"api/articles/模版特例化.json","keywords":null,"cover":"img/mo.jpg","text":"模板特例化主要是用于在模板特定情况下的一些特殊定义...","permalink":"/post/模版特例化","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"C++模版","slug":"C-模版","count":4,"path":"api/categories/C-模版.json"}],"tags":[{"name":"模版","slug":"模版","count":4,"path":"api/tags/模版.json"},{"name":"特例化","slug":"特例化","count":1,"path":"api/tags/特例化.json"}],"author":{"name":"kiyose408","slug":"blog-author","avatar":"img/kiyose.png","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/kiyose408"}}}},"feature":null}}