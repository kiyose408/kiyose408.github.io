{"title":"C++中的引用","uid":"a55fc9d3e63ec59352fa8738bb767a18","slug":"C++中的引用","date":"2021-08-14T03:49:00.000Z","updated":"2024-05-21T12:46:34.259Z","comments":true,"path":"api/articles/C++中的引用.json","keywords":null,"cover":"img/c01.jpg","content":"<h1 id=\"C-中的引用\"><a href=\"#C-中的引用\" class=\"headerlink\" title=\"C++中的引用\"></a>C++中的引用</h1><h2 id=\"引用的基本语法\"><a href=\"#引用的基本语法\" class=\"headerlink\" title=\"引用的基本语法\"></a>引用的基本语法</h2><p>作用：给变量起别名<br>语法：&#x3D;&#x3D;数据类型 &amp; 别名 &#x3D; 原名&#x3D;&#x3D;</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//比如给一个int变量a命名一个别名 b</span></span><br><span class=\"line\"><span class=\"type\">int</span> &amp;b = a;</span><br><span class=\"line\"></span><br><span class=\"line\">b = <span class=\"number\">20</span>;</span><br><span class=\"line\">cout&lt;&lt; a &lt;&lt; endl;<span class=\"comment\">//a= 20</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"引用的注意事项\"><a href=\"#引用的注意事项\" class=\"headerlink\" title=\"引用的注意事项\"></a>引用的注意事项</h2><ul>\n<li>引用必须初始化</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> &amp;b;<span class=\"comment\">//错误的</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>引用在初始化后，就不可以改变了</li>\n<li>示例:</li>\n</ul>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">mian</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"><span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> b = <span class=\"number\">20</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> &amp;c = a;</span><br><span class=\"line\">c=b;</span><br><span class=\"line\">cout</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"引用做函数参数\"><a href=\"#引用做函数参数\" class=\"headerlink\" title=\"引用做函数参数\"></a>引用做函数参数</h2><p><strong>作用</strong>:函数传参时，可以利用引用的技术让形参修饰实参<br><strong>优点</strong>:可以简化指针修改实参</p>\n<p>示例：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//交换函数</span></span><br><span class=\"line\"><span class=\"comment\">//1、值传递</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">mySwap01</span><span class=\"params\">(<span class=\"type\">int</span> a, <span class=\"type\">int</span> b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> temp = a;</span><br><span class=\"line\">\ta = b;</span><br><span class=\"line\">\tb = temp;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;swap01 a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;swap01 b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//2、地址传递</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">mySwap02</span><span class=\"params\">(<span class=\"type\">int</span> *a,<span class=\"type\">int</span> *b)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> temp = *a;</span><br><span class=\"line\">\t*a = *b;</span><br><span class=\"line\">\t*b = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// </span></span><br><span class=\"line\"><span class=\"comment\">//3、引用传递</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">mySwap03</span><span class=\"params\">(<span class=\"type\">int</span> &amp;a,<span class=\"type\">int</span> &amp;b)</span><span class=\"comment\">//a，b已经时引用作为别名进行操作修改，理解为就是对于实参进行操作</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> temp = a;</span><br><span class=\"line\">\ta = b;</span><br><span class=\"line\">\tb = temp;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\">\t<span class=\"type\">int</span> b = <span class=\"number\">20</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//mySwap01(a, b);//值传递，形参不会改变实参</span></span><br><span class=\"line\">\t<span class=\"comment\">//mySwap02(&amp;a, &amp;b);//地址传递，形参会修饰实参</span></span><br><span class=\"line\">\t<span class=\"built_in\">mySwap03</span>(a, b);<span class=\"comment\">//引用传递，形参会修饰实参</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;b = &quot;</span> &lt;&lt; b &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"引用做函数返回值\"><a href=\"#引用做函数返回值\" class=\"headerlink\" title=\"引用做函数返回值\"></a>引用做函数返回值</h2><p>作用：引用时可以作为函数的返回值存在的。</p>\n<p>注意：<strong>不要返回局部变量引用</strong><br>用法：函数调用做左值</p>\n<p>示例：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//引用做函数的返回值</span></span><br><span class=\"line\"><span class=\"comment\">//1、不要返回局部变量的引用</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span>&amp; <span class=\"title\">test01</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">10</span>;\t<span class=\"comment\">//局部变量存放在四区中的  栈区</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//2、函数的调用可以做为左值</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span>&amp; <span class=\"title\">test02</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">static</span> <span class=\"type\">int</span> a = <span class=\"number\">10</span>;\t<span class=\"comment\">//静态变量，存放在全局区，全局区上的数据在程序结束后系统释放</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span>&amp; ref = <span class=\"built_in\">test01</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;ref = &quot;</span> &lt;&lt; ref &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;ref = &quot;</span> &lt;&lt; ref &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span>&amp; ref1 = <span class=\"built_in\">test02</span>();</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;ref1 = &quot;</span> &lt;&lt; ref1 &lt;&lt; endl;<span class=\"comment\">//实现对于静态变量的返回</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;ref1 = &quot;</span> &lt;&lt; ref1 &lt;&lt; endl;<span class=\"comment\">//在程序结束之前不会被释放</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//如果函数的返回值是引用，这个函数调用可以作为左值</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">test02</span>() = <span class=\"number\">1000</span>;<span class=\"comment\">//返回的是a，相当于对a直接操作</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;ref1 = &quot;</span> &lt;&lt; ref1 &lt;&lt; endl;<span class=\"comment\">//ref1就是a的别名，所以此时就会改变此处的值了</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;ref1 = &quot;</span> &lt;&lt; ref1 &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"引用的本质\"><a href=\"#引用的本质\" class=\"headerlink\" title=\"引用的本质\"></a>引用的本质</h2><p>本质：引用的本质在C++内部实现是一个指针常量（指针的指向是不可更改的）</p>\n<p>示例：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"comment\">//发现是引用，转换为 int* const ref = &amp;a;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">func</span><span class=\"params\">(<span class=\"type\">int</span>&amp; ref)</span> </span>&#123;</span><br><span class=\"line\">\tref = <span class=\"number\">100</span>;<span class=\"comment\">//ref是引用，转换为*ref = 100</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//自动转换成 int* const ref = &amp;a;指针常量是指针指向不可改，也说明为什么引用不可更改</span></span><br><span class=\"line\">\t<span class=\"type\">int</span>&amp; ref = a;</span><br><span class=\"line\">\tref = <span class=\"number\">20</span>;<span class=\"comment\">//内部发现ref是引用，自动帮我们转换为：*ref = 20；</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;ref:&quot;</span> &lt;&lt; ref &lt;&lt; endl;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">func</span>(a);</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;a:&quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;ref:&quot;</span> &lt;&lt; ref &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>结论：C++推荐引用技术，因为语法方便，引用本质就是指针常量，但是所有的指针操作编译器都帮我们做了。</p>\n<h2 id=\"常量引用\"><a href=\"#常量引用\" class=\"headerlink\" title=\"常量引用\"></a>常量引用</h2><p><strong>作用</strong>:常量引用主要用来修饰形参，防止误操作<br>在函数形参列表中，可以加const修饰形参，防止形参改变实参<br><img src=\"https://img-blog.csdnimg.cn/043ee89396f245a3bbb694c4981b4566.png\" alt=\"在这里插入图片描述\"></p>\n<p>示例：</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//打印数据函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">showValue</span><span class=\"params\">(<span class=\"type\">const</span> <span class=\"type\">int</span>&amp; val)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//val = 1000;</span></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;val = &quot;</span> &lt;&lt; val &lt;&lt; endl;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//常量引用</span></span><br><span class=\"line\">\t<span class=\"comment\">//使用场景，用来修饰形参,防止误操作</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//int a = 10;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//加上const之后 编译器将代码修改  int temp = 10； const int &amp; ref = temp;</span></span><br><span class=\"line\">\t<span class=\"comment\">//const int&amp; ref = 10;//引用必须引用一块合法的引用空间</span></span><br><span class=\"line\">\t<span class=\"comment\">//ref = 20；//加入const之后变为只读，不可以修改</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"type\">int</span> a = <span class=\"number\">100</span>;</span><br><span class=\"line\">\t<span class=\"built_in\">showValue</span>(a);</span><br><span class=\"line\"></span><br><span class=\"line\">\tcout &lt;&lt; <span class=\"string\">&quot;a = &quot;</span> &lt;&lt; a &lt;&lt; endl;</span><br><span class=\"line\">\t<span class=\"built_in\">system</span>(<span class=\"string\">&quot;pause&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","feature":null,"text":"深入解析C++引用概念，包括基本语法、注意事项、作为函数参数与返回值的使用，探讨引用的本质与常量引用的应用。...","permalink":"/post/C++中的引用","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"C++高级","slug":"C-高级","count":7,"path":"api/categories/C-高级.json"}],"tags":[{"name":"C++","slug":"C","count":18,"path":"api/tags/C.json"},{"name":"内存管理","slug":"内存管理","count":3,"path":"api/tags/内存管理.json"},{"name":"分区模型","slug":"分区模型","count":3,"path":"api/tags/分区模型.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#C-%E4%B8%AD%E7%9A%84%E5%BC%95%E7%94%A8\"><span class=\"toc-text\">C++中的引用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%95%E7%94%A8%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">引用的基本语法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%95%E7%94%A8%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">引用的注意事项</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%95%E7%94%A8%E5%81%9A%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">引用做函数参数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%95%E7%94%A8%E5%81%9A%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%80%BC\"><span class=\"toc-text\">引用做函数返回值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%95%E7%94%A8%E7%9A%84%E6%9C%AC%E8%B4%A8\"><span class=\"toc-text\">引用的本质</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E9%87%8F%E5%BC%95%E7%94%A8\"><span class=\"toc-text\">常量引用</span></a></li></ol></li></ol>","author":{"name":"kiyose408","slug":"blog-author","avatar":"img/kiyose.png","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/kiyose408"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"函数提高","uid":"ae53cbdfb185be70e1c06b4739ffc47b","slug":"函数提高","date":"2021-08-31T23:49:00.000Z","updated":"2024-05-21T12:47:25.006Z","comments":true,"path":"api/articles/函数提高.json","keywords":null,"cover":"img/c01.jpg","text":"讲解函数默认参数、占位参数、重载、及多态基础，提升函数使用技巧。...","permalink":"/post/函数提高","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"C++高级","slug":"C-高级","count":7,"path":"api/categories/C-高级.json"}],"tags":[{"name":"C++","slug":"C","count":18,"path":"api/tags/C.json"},{"name":"函数","slug":"函数","count":2,"path":"api/tags/函数.json"},{"name":"默认参数","slug":"默认参数","count":1,"path":"api/tags/默认参数.json"},{"name":"重载","slug":"重载","count":1,"path":"api/tags/重载.json"},{"name":"多态","slug":"多态","count":1,"path":"api/tags/多态.json"}],"author":{"name":"kiyose408","slug":"blog-author","avatar":"img/kiyose.png","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/kiyose408"}}}},"feature":null},"next_post":{"title":"内存分区模型","uid":"bddeee4d46cae4292f5af8a8347e08fc","slug":"const修饰符修饰指针","date":"2021-08-03T03:49:00.000Z","updated":"2024-05-21T12:46:18.102Z","comments":true,"path":"api/articles/const修饰符修饰指针.json","keywords":null,"cover":"img/c01.jpg","text":"阐述const修饰指针与指针常量的区别，强调const在不同位置的意义。...","permalink":"/post/const修饰符修饰指针","photos":[],"count_time":{"symbolsCount":591,"symbolsTime":"1 mins."},"categories":[{"name":"C++高级","slug":"C-高级","count":7,"path":"api/categories/C-高级.json"}],"tags":[{"name":"C++","slug":"C","count":18,"path":"api/tags/C.json"},{"name":"内存管理","slug":"内存管理","count":3,"path":"api/tags/内存管理.json"},{"name":"分区模型","slug":"分区模型","count":3,"path":"api/tags/分区模型.json"}],"author":{"name":"kiyose408","slug":"blog-author","avatar":"img/kiyose.png","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/kiyose408"}}}},"feature":null}}