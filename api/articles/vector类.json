{"title":"Vector","uid":"bfb8c7eb75a20258cca7b53c5617a35a","slug":"vector类","date":"2021-05-04T02:15:20.000Z","updated":"2024-05-16T19:45:39.519Z","comments":true,"path":"api/articles/vector类.json","keywords":null,"cover":null,"content":"<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>本文介绍vector的使用方法，vector是一种高效访问和修改的容器，支持遍历，索引访问。</p>\n<h2 id=\"初始化\"><a href=\"#初始化\" class=\"headerlink\" title=\"初始化\"></a>初始化</h2><p>1 用花括号进行列表初始化 2 可以用()指定初始值和个数初始化</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">void vector_init()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //列表初始化</span><br><span class=\"line\">    vector&lt;string&gt; v1&#123;&quot;a&quot;, &quot;b&quot;, &quot;c&quot;&#125;;</span><br><span class=\"line\">    //错误用法</span><br><span class=\"line\">    // vector&lt;string&gt; v2(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;);</span><br><span class=\"line\">    //初始化vector大小为10，每个元素为-1</span><br><span class=\"line\">    vector&lt;int&gt; ivec(10, -1);</span><br><span class=\"line\">    // 10个string类型的元素,每个都是hi</span><br><span class=\"line\">    vector&lt;string&gt; svec(10, &quot;hi!&quot;);</span><br><span class=\"line\">    // 10个元素，每个都初始化为0</span><br><span class=\"line\">    vector&lt;int&gt; ivec2(10);</span><br><span class=\"line\">    // 10个元素，每个都初始化为空string</span><br><span class=\"line\">    vector&lt;string&gt; svec2(10);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"添加元素\"><a href=\"#添加元素\" class=\"headerlink\" title=\"添加元素\"></a>添加元素</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//利用push_back将元素添加到vector末尾</span><br><span class=\"line\">vector&lt;int&gt; v2;</span><br><span class=\"line\">for (int i = 0; i != 100; ++i)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    v2.push_back(i);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"遍历访问\"><a href=\"#遍历访问\" class=\"headerlink\" title=\"遍历访问\"></a>遍历访问</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> // 求vector 每个元素平方值</span><br><span class=\"line\">vector&lt;int&gt; v3&#123;1, 2, 3, 4, 5, 6, 7, 8, 9&#125;;</span><br><span class=\"line\">for (auto &amp;i : v3)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    i *= i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">for (auto i : v3)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    cout &lt;&lt; i &lt;&lt; &quot; &quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">cout &lt;&lt; endl;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"下标访问\"><a href=\"#下标访问\" class=\"headerlink\" title=\"下标访问\"></a>下标访问</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//索引访问</span><br><span class=\"line\">// 11个分数段，全部初始化为0</span><br><span class=\"line\">vector&lt;unsigned&gt; scores(11, 0);</span><br><span class=\"line\">unsigned grade;</span><br><span class=\"line\">//读取成绩</span><br><span class=\"line\">while (cin &gt;&gt; grade)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    //只处理有效成绩，小于等于100的成绩</span><br><span class=\"line\">    if (grade &lt;= 100)</span><br><span class=\"line\">    //对应的分数段+1，修改索引对应的元素值</span><br><span class=\"line\">        ++scores[grade / 10];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","feature":true,"text":"本文介绍vector的使用方法，vector是一种高效访问和修改的容器，支持遍历，索引访问。...","permalink":"/post/vector类","photos":[],"count_time":{"symbolsCount":"1.2k","symbolsTime":"1 mins."},"categories":[{"name":"C++基础","slug":"C-基础","count":7,"path":"api/categories/C-基础.json"}],"tags":[{"name":"C++","slug":"C","count":7,"path":"api/tags/C.json"},{"name":"Vector","slug":"Vector","count":1,"path":"api/tags/Vector.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9D%E5%A7%8B%E5%8C%96\"><span class=\"toc-text\">初始化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E5%85%83%E7%B4%A0\"><span class=\"toc-text\">添加元素</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%81%8D%E5%8E%86%E8%AE%BF%E9%97%AE\"><span class=\"toc-text\">遍历访问</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%8B%E6%A0%87%E8%AE%BF%E9%97%AE\"><span class=\"toc-text\">下标访问</span></a></li></ol>","author":{"name":"kiyose408","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"迭代器","uid":"5391af7718199d3c4ba5b2fd9250437c","slug":"迭代器","date":"2021-05-04T18:15:50.000Z","updated":"2024-05-16T19:47:08.737Z","comments":true,"path":"api/articles/迭代器.json","keywords":null,"cover":null,"text":"当我们要遍历容器如vector,map等复杂结构时，可以通过迭代器进行遍历，依次取出容器中的值。通过容器类的begin()和end()函数获取指向第一个元素位置的迭代器和指向最后一个元素下一个位置的迭代器。 迭代器初步使用...","permalink":"/post/迭代器","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"C++基础","slug":"C-基础","count":7,"path":"api/categories/C-基础.json"}],"tags":[{"name":"C++","slug":"C","count":7,"path":"api/tags/C.json"},{"name":"迭代器","slug":"迭代器","count":1,"path":"api/tags/迭代器.json"}],"author":{"name":"kiyose408","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{}}},"feature":true},"next_post":{"title":"String类","uid":"d7215eab570338175fadc0dc91188274","slug":"C++的string类","date":"2021-05-03T04:15:58.000Z","updated":"2024-05-16T19:43:59.153Z","comments":true,"path":"api/articles/C++的string类.json","keywords":null,"cover":null,"text":"介绍string类的使用...","permalink":"/post/C++的string类","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"C++基础","slug":"C-基础","count":7,"path":"api/categories/C-基础.json"}],"tags":[{"name":"C++","slug":"C","count":7,"path":"api/tags/C.json"},{"name":"String类","slug":"String类","count":1,"path":"api/tags/String类.json"}],"author":{"name":"kiyose408","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{}}},"feature":true}}