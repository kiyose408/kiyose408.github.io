{"title":"419.甲板上的战舰","uid":"55e5614ccace4216d01716b15a342b96","slug":"LeetCode419.甲板上的战舰","date":"2024-06-11T03:58:00.000Z","updated":"2024-06-11T17:56:11.501Z","comments":true,"path":"api/articles/LeetCode419.甲板上的战舰.json","keywords":null,"cover":"img/lc.png","content":"<h1 id=\"问\"><a href=\"#问\" class=\"headerlink\" title=\"问\"></a>问</h1><p><a href=\"https://leetcode.cn/problems/battleships-in-a-board/\">419. 甲板上的战舰</a></p>\n<p><strong>难度：</strong> 中等</p>\n<p>给你一个大小为 <code>m x n</code> 的矩阵 <code>board</code> 表示甲板，其中，每个单元格可以是一艘战舰 <code>&#39;X&#39;</code> 或者是一个空位 <code>&#39;.&#39;</code> ，返回在甲板 <code>board</code> 上放置的 <strong>战舰</strong> 的数量。</p>\n<p><strong>战舰</strong> 只能水平或者垂直放置在 <code>board</code> 上。换句话说，战舰只能按 <code>1 x k</code>（<code>1</code> 行，<code>k</code> 列）或 <code>k x 1</code>（<code>k</code> 行，<code>1</code> 列）的形状建造，其中 <code>k</code> 可以是任意大小。两艘战舰之间至少有一个水平或垂直的空位分隔 （即没有相邻的战舰）。</p>\n<p><strong>示例 1：</strong></p>\n<p><img src=\"https://assets.leetcode.com/uploads/2021/04/10/battelship-grid.jpg\"></p>\n<p><strong>输入：</strong> board &#x3D; <code>[[&quot;X&quot;,&quot;.&quot;,&quot;.&quot;,&quot;X&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;X&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;X&quot;]]</code><br><strong>输出：</strong> 2</p>\n<p><strong>示例 2：</strong></p>\n<p><strong>输入：</strong> board &#x3D; <code>[[&quot;.&quot;]]</code><br><strong>输出：</strong> 0</p>\n<p><strong>提示：</strong></p>\n<ul>\n<li><code>m == board.length</code></li>\n<li><code>n == board[i].length</code></li>\n<li><code>1 &lt;= m, n &lt;= 200</code></li>\n<li><code>board[i][j]</code> 是 <code>&#39;.&#39;</code> 或 <code>&#39;X&#39;</code></li>\n</ul>\n<h1 id=\"解\"><a href=\"#解\" class=\"headerlink\" title=\"解\"></a>解</h1><h2 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h2><p>需求：识别出给出的矩阵内纵或者横向连续的元素群（战舰）的个数。</p>\n<ul>\n<li>基于[0,0]开始进行识别，识别列和行是否连续,如果是x：<ol>\n<li>识别[1,0]是否是x，如果是继续检测[2,0]，同时将识别过的<code>x</code>转化为<code>.</code> ，以此类推，直到没有后续元素或者后续元素不连续。</li>\n<li>识别[0,1]是否是x，如果是继续检测[0,2],同时将识别过的<code>x</code>转化为<code>.</code> ，以此类推，直到没有后续元素或者后续元素不连续。</li>\n<li>计数+1.</li>\n</ol>\n</li>\n<li>如果[0,0]识别发现是<code>.</code>则转到下一个元素.</li>\n<li>循环结束返回计数。</li>\n</ul>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\"><span class=\"keyword\">public</span>:</span><br><span class=\"line\">    <span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">countBattleships</span><span class=\"params\">(vector&lt;vector&lt;<span class=\"type\">char</span>&gt;&gt;&amp; board)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> row = board.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        <span class=\"type\">int</span> col = board[<span class=\"number\">0</span>].<span class=\"built_in\">size</span>();</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; row; ++i)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>;j&lt; col;++j )&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(board[i][j] == <span class=\"string\">&#x27;X&#x27;</span>)&#123;</span><br><span class=\"line\">                    board[i][j] = <span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> k = j+<span class=\"number\">1</span>;k&lt;col&amp;&amp;board[i][k] == <span class=\"string\">&#x27;X&#x27;</span> ;++k)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        board[i][k]= <span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> k = i+<span class=\"number\">1</span>;k&lt;row&amp;&amp;board[k][j] == <span class=\"string\">&#x27;X&#x27;</span> ;++k)</span><br><span class=\"line\">                    &#123;</span><br><span class=\"line\">                        board[k][j]= <span class=\"string\">&#x27;.&#x27;</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    res++;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","feature":false,"text":"给你一个大小为m x n 的矩阵board表示甲板...","permalink":"/post/LeetCode419.甲板上的战舰","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"LeetCode","slug":"LeetCode","count":4,"path":"api/categories/LeetCode.json"}],"tags":[{"name":"LeetCode","slug":"LeetCode","count":4,"path":"api/tags/LeetCode.json"},{"name":"数组","slug":"数组","count":2,"path":"api/tags/数组.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%97%AE\"><span class=\"toc-text\">问</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%A7%A3\"><span class=\"toc-text\">解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">思路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">代码</span></a></li></ol></li></ol>","author":{"name":"kiyose408","slug":"blog-author","avatar":"img/kiyose.png","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/kiyose408"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Leetcode2806. 取整购买后的账户余额","uid":"7c2197de16b3c7f32cf086f091a02f09","slug":"Leetcode2806. 取整购买后的账户余额","date":"2024-06-11T16:11:00.000Z","updated":"2024-06-11T17:56:01.811Z","comments":true,"path":"api/articles/Leetcode2806. 取整购买后的账户余额.json","keywords":null,"cover":"img/lc.png","text":"一开始，你的银行账户里有 100 块钱。 给你一个整数purchaseAmount ，它表示你在一次购买中愿意支出的","permalink":"/post/Leetcode2806. 取整购买后的账户余额","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"LeetCode","slug":"LeetCode","count":4,"path":"api/categories/LeetCode.json"}],"tags":[{"name":"LeetCode","slug":"LeetCode","count":4,"path":"api/tags/LeetCode.json"}],"author":{"name":"kiyose408","slug":"blog-author","avatar":"img/kiyose.png","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/kiyose408"}}}},"feature":null},"next_post":{"title":"881.救生艇","uid":"5c233c4480863b523ffddb11bf0bea84","slug":"LeetCode881.救生艇","date":"2024-06-10T07:06:00.000Z","updated":"2024-06-11T17:56:13.950Z","comments":true,"path":"api/articles/LeetCode881.救生艇.json","keywords":null,"cover":"img/lc.png","text":"给定数组 `people` 。`people[i]`表示第 `i` 个人的体重 ，**船的数量不限**，每艘船可以承载的最大重量为 `limit`。...","permalink":"/post/LeetCode881.救生艇","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"LeetCode","slug":"LeetCode","count":4,"path":"api/categories/LeetCode.json"}],"tags":[{"name":"LeetCode","slug":"LeetCode","count":4,"path":"api/tags/LeetCode.json"},{"name":"中等题","slug":"中等题","count":1,"path":"api/tags/中等题.json"},{"name":"贪心","slug":"贪心","count":1,"path":"api/tags/贪心.json"}],"author":{"name":"kiyose408","slug":"blog-author","avatar":"img/kiyose.png","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/kiyose408"}}}},"feature":false}}