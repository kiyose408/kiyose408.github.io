{"title":"Git的使用","uid":"9e0e8f4081bc7079678c53e2b84213cf","slug":"Git的使用","date":"2023-04-15T04:00:00.000Z","updated":"2024-07-19T22:25:00.522Z","comments":true,"path":"api/articles/Git的使用.json","keywords":null,"cover":"img/web.jpg","content":"<h1 id=\"Git简介\"><a href=\"#Git简介\" class=\"headerlink\" title=\"Git简介\"></a>Git简介</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Git是一个分布式版本控制系统，用于跟踪在软件开发过程中对文件的修改。它最初由Linus Torvalds在2005年创建，目的是为了更高效地管理Linux内核的源代码。Git设计用于处理从小型到非常大型的项目，能够快速、灵活地进行版本控制。</p></blockquote>\n<h2 id=\"特点和功能\"><a href=\"#特点和功能\" class=\"headerlink\" title=\"特点和功能\"></a>特点和功能</h2><ol>\n<li><strong>分布式</strong>：每个开发者的工作副本都是一个完整的仓库，包括完整的历史记录。这使得离线工作和提交成为可能，并且可以很容易地与他人共享更改。</li>\n<li><strong>快照式存储</strong>：Git将项目状态保存为文件系统的一个快照，而不是仅记录文件和目录的差异，这使得提交变得快速而高效。</li>\n<li><strong>分支和合并</strong>：Git允许你轻松地创建和切换分支，这非常适合并行开发。当开发完成时，可以将这些分支合并回主分支。</li>\n<li><strong>非线性开发</strong>：Git支持复杂的非线性工作流，如多条开发路径并行进行，然后合并。</li>\n<li><strong>数据完整性</strong>：Git使用SHA-1散列算法来确保数据的完整性和一致性，防止数据损坏或篡改。</li>\n<li><strong>高效性能</strong>：Git在设计上优化了性能，即使在处理大型项目时也能保持高速度。</li>\n<li><strong>灵活的工作流程</strong>：Git可以适应各种开发流程，无论是单人项目还是大型团队协作。</li>\n</ol>\n<h2 id=\"注意点\"><a href=\"#注意点\" class=\"headerlink\" title=\"注意点\"></a>注意点</h2><h3 id=\"1-理解Git的工作流：\"><a href=\"#1-理解Git的工作流：\" class=\"headerlink\" title=\"1. 理解Git的工作流：\"></a>1. <strong>理解Git的工作流</strong>：</h3><p>   确保你理解Git的工作流，包括工作目录、暂存区（索引）和本地仓库之间的区别。了解何时使用<code>git add</code>、<code>git commit</code>和<code>git push</code>是至关重要的。</p>\n<h3 id=\"2-频繁提交：\"><a href=\"#2-频繁提交：\" class=\"headerlink\" title=\"2. 频繁提交：\"></a>2. <strong>频繁提交</strong>：</h3><p>   经常提交你的工作，这样如果发生错误，你可以更容易地回滚到最近的稳定状态。但是，确保每次提交都有明确的提交消息，描述所做的更改。</p>\n<h3 id=\"3-避免在主分支上直接开发：\"><a href=\"#3-避免在主分支上直接开发：\" class=\"headerlink\" title=\"3. 避免在主分支上直接开发：\"></a>3. <strong>避免在主分支上直接开发</strong>：</h3><p>   最好在独立的分支上进行开发，然后通过<code>git merge</code>或<code>git rebase</code>将更改合并到主分支（通常是<code>main</code>或<code>master</code>）。这有助于保持主分支的稳定性。</p>\n<h3 id=\"4-小心使用git-reset-hard-：\"><a href=\"#4-小心使用git-reset-hard-：\" class=\"headerlink\" title=\"4. **小心使用git reset --hard**：\"></a>4. **小心使用<code>git reset --hard</code>**：</h3><p>   使用<code>git reset --hard</code>会丢失未提交的更改，所以除非你确定要这样做，否则不要轻易使用。</p>\n<h3 id=\"5-解决合并冲突：\"><a href=\"#5-解决合并冲突：\" class=\"headerlink\" title=\"5. 解决合并冲突：\"></a>5. <strong>解决合并冲突</strong>：</h3><p>   在合并或拉取更改时，可能会遇到冲突。务必仔细检查并解决冲突，确保代码的正确性和逻辑的一致性。</p>\n<h3 id=\"6-保护敏感信息：\"><a href=\"#6-保护敏感信息：\" class=\"headerlink\" title=\"6. 保护敏感信息：\"></a>6. <strong>保护敏感信息</strong>：</h3><p>   不要在版本控制中提交敏感信息，比如密码、API密钥等。使用环境变量或加密的配置文件。</p>\n<h3 id=\"7-使用-gitignore文件：\"><a href=\"#7-使用-gitignore文件：\" class=\"headerlink\" title=\"7. 使用.gitignore文件：\"></a>7. <strong>使用<code>.gitignore</code>文件</strong>：</h3><p>   创建一个<code>.gitignore</code>文件来排除不必要的文件，如编译后的二进制文件、日志文件或临时文件，以免它们被加入到版本控制中。</p>\n<h3 id=\"8-定期备份仓库：\"><a href=\"#8-定期备份仓库：\" class=\"headerlink\" title=\"8. 定期备份仓库：\"></a>8. <strong>定期备份仓库</strong>：</h3><p>   尽管Git本身具有良好的数据完整性机制，但定期备份仓库仍然是个好习惯，以防硬盘故障或其他意外情况。</p>\n<h3 id=\"9-理解git-rebase的影响：\"><a href=\"#9-理解git-rebase的影响：\" class=\"headerlink\" title=\"9. 理解git rebase的影响：\"></a>9. <strong>理解<code>git rebase</code>的影响</strong>：</h3><p>   使用<code>git rebase</code>可以整理提交历史，使其看起来更加整洁，但它会改变历史记录，所以如果你的分支已经公开并与他人共享，谨慎使用。</p>\n<h3 id=\"10-使用git-blame和git-bisect-：\"><a href=\"#10-使用git-blame和git-bisect-：\" class=\"headerlink\" title=\"10. **使用git blame和git bisect**：\"></a>10. **使用<code>git blame</code>和<code>git bisect</code>**：</h3><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D4D4D4\">`git blame`可以帮助你找到特定行的作者和提交日期，而`git bisect`则可以帮助定位引入bug的提交。</span></span></code></pre></div><h3 id=\"11-学习和使用高级特性：\"><a href=\"#11-学习和使用高级特性：\" class=\"headerlink\" title=\"11. 学习和使用高级特性：\"></a>11. <strong>学习和使用高级特性</strong>：</h3><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D4D4D4\">例如，熟悉`git stash`、`git cherry-pick`、`git reflog`等命令，它们在特定情况下非常有用。</span></span></code></pre></div><h3 id=\"12-遵守编码标准和命名规范：\"><a href=\"#12-遵守编码标准和命名规范：\" class=\"headerlink\" title=\"12. 遵守编码标准和命名规范：\"></a>12. <strong>遵守编码标准和命名规范</strong>：</h3><div class=\"language-txt\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">txt</span><pre class=\"shiki dark-plus\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #D4D4D4\">保持代码风格一致，使用有意义的变量名和函数名，这有助于团队成员之间的理解和协作。</span></span></code></pre></div><p>遵循这些指导原则将帮助你更安全、更高效地使用Git进行版本控制和协作开发。</p>\n<h1 id=\"Git的使用\"><a href=\"#Git的使用\" class=\"headerlink\" title=\"Git的使用\"></a>Git的使用</h1><p>Git通常与远程仓库服务（如GitHub、GitLab或Bitbucket）结合使用，以便于团队成员之间的协作和代码共享。通过Git，开发者可以轻松地查看历史版本，撤销更改，以及合并来自多个贡献者的更新。</p>\n<h2 id=\"简易的命令行入门教程（gitee）\"><a href=\"#简易的命令行入门教程（gitee）\" class=\"headerlink\" title=\"简易的命令行入门教程（gitee）:\"></a>简易的命令行入门教程（gitee）:</h2><p>Git 全局设置:</p>\n<p>git config –global user.name “username”<br>git config –global user.email “<a href=\"mailto:&#x75;&#x73;&#101;&#114;&#110;&#x61;&#109;&#101;&#64;&#120;&#120;&#x2e;&#99;&#111;&#109;\">&#x75;&#x73;&#101;&#114;&#110;&#x61;&#109;&#101;&#64;&#120;&#120;&#x2e;&#99;&#111;&#109;</a>“</p>\n<p><strong>创建 git 仓库:</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span></blockquote>\n<p>mkdir qtchat<br>cd qtchat<br>git init<br>touch README.md<br>git add README.md<br>git commit -m “first commit”<br>git remote add origin <a href=\"https://gitee.com/username/repositoriesname.git\">https://gitee.com/username/repositoriesname.git</a><br>git push -u origin “master”</p>\n<p><strong>已有仓库?</strong></p>\n<blockquote></blockquote>\n<p>cd existing_git_repo<br>git remote add origin <a href=\"https://gitee.com/username/repositoriesname.git\">https://gitee.com/username/repositoriesname.git</a><br>git push -u origin “master”</p>\n<h2 id=\"基础流程和常用命令\"><a href=\"#基础流程和常用命令\" class=\"headerlink\" title=\"基础流程和常用命令\"></a>基础流程和常用命令</h2><p>Git 和仓库的使用是软件开发中的重要组成部分，尤其是在协作开发环境中。下面是一些基本的 Git 命令和操作流程，用于初始化仓库、链接远程仓库、推送和拉取代码，以及在团队中协作开发。</p>\n<h3 id=\"1-初始化本地仓库\"><a href=\"#1-初始化本地仓库\" class=\"headerlink\" title=\"1. 初始化本地仓库\"></a>1. 初始化本地仓库</h3><ul>\n<li><strong>初始化本地仓库</strong>：<ul>\n<li><code>git init</code>：在当前目录下初始化一个新的 Git 仓库。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"2-链接远程仓库\"><a href=\"#2-链接远程仓库\" class=\"headerlink\" title=\"2. 链接远程仓库\"></a>2. 链接远程仓库</h3><ul>\n<li><strong>添加远程仓库</strong>：<ul>\n<li><code>git remote add origin &lt;repository-url&gt;</code>：将远程仓库添加到本地仓库，通常远程仓库的别名为“origin”。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3-克隆远程仓库\"><a href=\"#3-克隆远程仓库\" class=\"headerlink\" title=\"3. 克隆远程仓库\"></a>3. 克隆远程仓库</h3><ul>\n<li><strong>克隆已有远程仓库</strong>：<ul>\n<li><code>git clone &lt;repository-url&gt;</code>：从远程仓库克隆所有数据到本地。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"4-提交更改\"><a href=\"#4-提交更改\" class=\"headerlink\" title=\"4. 提交更改\"></a>4. 提交更改</h3><ul>\n<li><strong>添加文件到暂存区</strong>：<ul>\n<li><code>git add &lt;file&gt;</code>：将文件添加到暂存区准备提交。</li>\n<li><code>git add .</code>：将所有修改过的文件添加到暂存区。</li>\n</ul>\n</li>\n<li><strong>提交暂存区的更改</strong>：<ul>\n<li><code>git commit -m &quot;Commit message&quot;</code>：将暂存区的更改提交到本地仓库，需要提供提交信息。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"5-推送更改到远程仓库\"><a href=\"#5-推送更改到远程仓库\" class=\"headerlink\" title=\"5. 推送更改到远程仓库\"></a>5. 推送更改到远程仓库</h3><ul>\n<li><strong>推送本地提交到远程仓库</strong>：<ul>\n<li><code>git push origin &lt;branch&gt;</code>：将本地分支的更改推送到远程仓库的对应分支。</li>\n<li>如果是第一次推送，可以使用：<ul>\n<li><code>git push --set-upstream origin &lt;branch&gt;</code>：设置上游跟踪分支并推送。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"6-拉取远程更改\"><a href=\"#6-拉取远程更改\" class=\"headerlink\" title=\"6. 拉取远程更改\"></a>6. 拉取远程更改</h3><ul>\n<li><strong>拉取远程仓库的更改</strong>：<ul>\n<li><code>git pull origin &lt;branch&gt;</code>：从远程仓库拉取更改并合并到本地分支。</li>\n<li>在合并冲突之前，通常会先做：<ul>\n<li><code>git fetch origin</code>：只下载远程仓库的更改但不自动合并。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"7-分支管理\"><a href=\"#7-分支管理\" class=\"headerlink\" title=\"7. 分支管理\"></a>7. 分支管理</h3><ul>\n<li><strong>创建新分支</strong>：<ul>\n<li><code>git branch &lt;branch-name&gt;</code>：基于当前分支创建新的分支。</li>\n<li><code>git checkout -b &lt;branch-name&gt;</code>：创建新分支并立即切换到该分支。</li>\n</ul>\n</li>\n<li><strong>切换分支</strong>：<ul>\n<li><code>git checkout &lt;branch-name&gt;</code>：切换到另一个分支。</li>\n</ul>\n</li>\n<li><strong>合并分支</strong>：<ul>\n<li><code>git merge &lt;branch-to-merge&gt;</code>：将一个分支的更改合并到当前分支。</li>\n</ul>\n</li>\n<li><strong>删除本地分支</strong>：<ul>\n<li><code>git branch -d &lt;branch-name&gt;</code>：删除已合并的本地分支。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"8-解决冲突\"><a href=\"#8-解决冲突\" class=\"headerlink\" title=\"8. 解决冲突\"></a>8. 解决冲突</h3><ul>\n<li>当拉取或合并时出现冲突，需要手动解决文件中的冲突标记，然后再次添加和提交文件。</li>\n</ul>\n<h3 id=\"9-查看状态和历史\"><a href=\"#9-查看状态和历史\" class=\"headerlink\" title=\"9. 查看状态和历史\"></a>9. 查看状态和历史</h3><ul>\n<li><strong>查看仓库状态</strong>：<ul>\n<li><code>git status</code>：显示当前工作目录的状态，哪些文件被修改、未追踪等。</li>\n</ul>\n</li>\n<li><strong>查看提交历史</strong>：<ul>\n<li><code>git log</code>：显示提交历史，可以加上参数如<code>--oneline</code>或<code>--graph</code>以获得更简洁或图形化的输出。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"10-协作开发常用命令\"><a href=\"#10-协作开发常用命令\" class=\"headerlink\" title=\"10. 协作开发常用命令\"></a>10. 协作开发常用命令</h3><ul>\n<li><strong>标签管理</strong>：<ul>\n<li><code>git tag &lt;tag-name&gt;</code>：为当前提交打上标签。</li>\n<li><code>git push origin &lt;tag-name&gt;</code>：推送标签到远程仓库。</li>\n</ul>\n</li>\n<li><strong>重置更改</strong>：<ul>\n<li><code>git reset HEAD~1</code>：将最后一次提交从历史中移除，但保留更改在工作目录。</li>\n<li><code>git reset --hard HEAD~1</code>：丢弃工作目录的所有更改，恢复到前一次提交。</li>\n</ul>\n</li>\n<li><strong>撤销文件更改</strong>：<ul>\n<li><code>git checkout -- &lt;file&gt;</code>：放弃对某个文件的更改，使其回到上次提交的状态。</li>\n</ul>\n</li>\n</ul>\n<p>以上是 Git 中一些基础的命令和使用场景，熟悉这些命令将帮助你在开发中更有效地使用 Git 进行版本控制和团队协作。</p>\n","feature":true,"text":"介绍基础的Git在开发中需要使用的技巧和一些基础操作的实现...","permalink":"/post/Git的使用","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"Git","slug":"Git","count":1,"path":"api/categories/Git.json"},{"name":"开发工具","slug":"Git/开发工具","count":1,"path":"api/categories/Git/开发工具.json"}],"tags":[{"name":"git","slug":"git","count":1,"path":"api/tags/git.json"},{"name":"开发工具","slug":"开发工具","count":1,"path":"api/tags/开发工具.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Git%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">Git简介</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%89%B9%E7%82%B9%E5%92%8C%E5%8A%9F%E8%83%BD\"><span class=\"toc-text\">特点和功能</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E7%82%B9\"><span class=\"toc-text\">注意点</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E7%90%86%E8%A7%A3Git%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81%EF%BC%9A\"><span class=\"toc-text\">1. 理解Git的工作流：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E9%A2%91%E7%B9%81%E6%8F%90%E4%BA%A4%EF%BC%9A\"><span class=\"toc-text\">2. 频繁提交：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E9%81%BF%E5%85%8D%E5%9C%A8%E4%B8%BB%E5%88%86%E6%94%AF%E4%B8%8A%E7%9B%B4%E6%8E%A5%E5%BC%80%E5%8F%91%EF%BC%9A\"><span class=\"toc-text\">3. 避免在主分支上直接开发：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E5%B0%8F%E5%BF%83%E4%BD%BF%E7%94%A8git-reset-hard-%EF%BC%9A\"><span class=\"toc-text\">4. **小心使用git reset --hard**：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E8%A7%A3%E5%86%B3%E5%90%88%E5%B9%B6%E5%86%B2%E7%AA%81%EF%BC%9A\"><span class=\"toc-text\">5. 解决合并冲突：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E4%BF%9D%E6%8A%A4%E6%95%8F%E6%84%9F%E4%BF%A1%E6%81%AF%EF%BC%9A\"><span class=\"toc-text\">6. 保护敏感信息：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-%E4%BD%BF%E7%94%A8-gitignore%E6%96%87%E4%BB%B6%EF%BC%9A\"><span class=\"toc-text\">7. 使用.gitignore文件：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-%E5%AE%9A%E6%9C%9F%E5%A4%87%E4%BB%BD%E4%BB%93%E5%BA%93%EF%BC%9A\"><span class=\"toc-text\">8. 定期备份仓库：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-%E7%90%86%E8%A7%A3git-rebase%E7%9A%84%E5%BD%B1%E5%93%8D%EF%BC%9A\"><span class=\"toc-text\">9. 理解git rebase的影响：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-%E4%BD%BF%E7%94%A8git-blame%E5%92%8Cgit-bisect-%EF%BC%9A\"><span class=\"toc-text\">10. **使用git blame和git bisect**：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#11-%E5%AD%A6%E4%B9%A0%E5%92%8C%E4%BD%BF%E7%94%A8%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%EF%BC%9A\"><span class=\"toc-text\">11. 学习和使用高级特性：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#12-%E9%81%B5%E5%AE%88%E7%BC%96%E7%A0%81%E6%A0%87%E5%87%86%E5%92%8C%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83%EF%BC%9A\"><span class=\"toc-text\">12. 遵守编码标准和命名规范：</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Git%E7%9A%84%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">Git的使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%80%E6%98%93%E7%9A%84%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B%EF%BC%88gitee%EF%BC%89\"><span class=\"toc-text\">简易的命令行入门教程（gitee）:</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E6%B5%81%E7%A8%8B%E5%92%8C%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">基础流程和常用命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%88%9D%E5%A7%8B%E5%8C%96%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">1. 初始化本地仓库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-%E9%93%BE%E6%8E%A5%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">2. 链接远程仓库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E5%85%8B%E9%9A%86%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">3. 克隆远程仓库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-%E6%8F%90%E4%BA%A4%E6%9B%B4%E6%94%B9\"><span class=\"toc-text\">4. 提交更改</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E6%8E%A8%E9%80%81%E6%9B%B4%E6%94%B9%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">5. 推送更改到远程仓库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E6%8B%89%E5%8F%96%E8%BF%9C%E7%A8%8B%E6%9B%B4%E6%94%B9\"><span class=\"toc-text\">6. 拉取远程更改</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86\"><span class=\"toc-text\">7. 分支管理</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-%E8%A7%A3%E5%86%B3%E5%86%B2%E7%AA%81\"><span class=\"toc-text\">8. 解决冲突</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#9-%E6%9F%A5%E7%9C%8B%E7%8A%B6%E6%80%81%E5%92%8C%E5%8E%86%E5%8F%B2\"><span class=\"toc-text\">9. 查看状态和历史</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#10-%E5%8D%8F%E4%BD%9C%E5%BC%80%E5%8F%91%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">10. 协作开发常用命令</span></a></li></ol></li></ol></li></ol>","author":{"name":"kiyose408","slug":"blog-author","avatar":"img/kiyose.png","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/kiyose408"}}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"如何使用Gitbook搭建自己的笔记网站","uid":"414c4f40ff95d974f69d0698f4a5c5a7","slug":"如何使用Gitbook搭建自己的笔记网站","date":"2022-02-19T04:00:00.000Z","updated":"2024-06-03T03:50:25.008Z","comments":true,"path":"api/articles/如何使用Gitbook搭建自己的笔记网站.json","keywords":null,"cover":"img/web.jpg","text":"使用GitBook搭建自己的笔记网站或知识库可以分为几个基本步骤。...","permalink":"/post/如何使用Gitbook搭建自己的笔记网站","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"实用教程","slug":"实用教程","count":7,"path":"api/categories/实用教程.json"}],"tags":[{"name":"网站搭建","slug":"网站搭建","count":2,"path":"api/tags/网站搭建.json"},{"name":"实用教程","slug":"实用教程","count":3,"path":"api/tags/实用教程.json"},{"name":"Gitbook","slug":"Gitbook","count":1,"path":"api/tags/Gitbook.json"}],"author":{"name":"kiyose408","slug":"blog-author","avatar":"img/kiyose.png","link":"/","description":"强风吹拂~","socials":{"github":"https://github.com/kiyose408","twitter":"","stackoverflow":"https://stackoverflow.com/users/22586365/kiyose408","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/qq_4492248","juejin":"https://juejin.cn/user/3941068096931262","customs":{"gitee":{"icon":"/svg/gitee.svg","link":"https://gitee.com/kiyose408"}}}},"feature":true}}